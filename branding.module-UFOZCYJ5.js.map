{
  "version": 3,
  "sources": ["angular:jit:template:file:src\\app\\admin_setting\\branding\\logo.html", "src/app/admin_setting/branding/logo.ts", "src/app/admin_setting/branding/branding.module.ts"],
  "sourcesContent": ["\uFEFF\r\n<div class=\"main-panel\" style=\"width:100%;\">\r\n    <div class=\"row breadcrumb\">\r\n        <div class=\"col-12 col-md-6 title\">{{'lblLogoAndTitle'| translate:service.CL}}</div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <a class=\"link\" routerLink=\"/\">{{'lblHome'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <a class=\"link\" routerLink=\"/admin\">{{'lblAdminSetting'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <span>{{'lblLogoAndTitle'| translate:service.CL}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 stretch-card\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form [formGroup]=\"LogoForm\" (ngSubmit)=\"LogoForm.valid && SaveLogo()\" #f=\"ngForm\" novalidate>\r\n                            <div class=\"card-title\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-teal mr-1\"><i class=\"fa fa-save mr-1\"></i>{{'btnSave'| translate:service.CL}}</button>\r\n                                <a class=\"btn btn-sm btn-secondary\" routerLink=\"/admin\"><i class=\"fa fa-times mr-1\"></i>{{'btnCancel'| translate:service.CL}}</a>\r\n                            </div>\r\n                            <div class=\"modal-body1\">\r\n                                <div class=\"form-box row\">\r\n                                    <div class=\"col-12 col-md-6 form-group mt-2\">\r\n                                        <div class=\"col-12 mb-5\">\r\n                                            <img *ngIf=\"imageUrl\" class=\"img-fluid\" [src]=\"imageUrl\" style=\"width:200px;height:24px;\" />\r\n                                        </div>\r\n                                        <div class=\"col-12 text-muted\">\r\n                                            {{'lblImageDimension200by24'| translate:service.CL}}\r\n                                        </div>\r\n                                        <div class=\"col-12\">\r\n                                            <button type=\"button\" class=\"btn btn-info btn-sm mt-2\" (click)=\"fllogo.click();\">{{'lblChooseCompanyLogo'| translate:service.CL}}</button>\r\n                                            <input type=\"hidden\" formControlName=\"CompanyLogo\" />\r\n                                            <input #fllogo type=\"file\" class=\"hide\" (change)=\"fileChange($event)\" accept=\"image/*\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-md-6 form-group\">\r\n                                        <label>{{'lblTitle'| translate:service.CL}}</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"CompanyTitle\" placeholder=\"{{'lblTitle'| translate:service.CL}} {{'lblTitle'| translate:service.CL}}\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>", "import { Component, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, NgForm } from '@angular/forms';\r\nimport { SystemService } from '../../shared/SystemService';\r\nimport { AlertType } from '../../shared/common_model';\r\n\r\n\r\n@Component({\r\n    templateUrl: './logo.html'\r\n})\r\n\r\nexport class LogoComponent {\r\n    isLoading = false;\r\n    public LogoName: string = \"\";\r\n    public allowedExtensions: Array<string> = [\"png\", \"jpg\", \"jpeg\", \"gif\", \"bmp\"];\r\n    public imageUrl: string;\r\n    constructor(public fb: UntypedFormBuilder, public service: SystemService, public router: Router) {\r\n        this.service.GoTo_ScrollTop(window);\r\n        this.initForm();\r\n    }\r\n    ngOnInit() {\r\n        this.bindData();\r\n    }\r\n\r\n    //Add/Edit \r\n    LogoForm: UntypedFormGroup;\r\n    @ViewChild('f') form: NgForm;\r\n    initForm() {\r\n        this.LogoForm = this.fb.group({\r\n            ApplicationSettingID: [0],\r\n            CompanyLogo: [\"\"],\r\n            CompanyTitle: [\"\"],\r\n        });\r\n    }\r\n    async bindData() {\r\n        try {\r\n            let res = await this.service.Data.ExecuteAPI_Post<ApplicationSetting_Model>(\"Admin/Get_ApplicationSetting\");\r\n            if (res) {\r\n                this.LogoForm.patchValue(res);\r\n                if (res.CompanyLogo) {\r\n                    let cdt = this.service.Date_Format(new Date(), 'yyyyMMddHHmmss');\r\n                    this.imageUrl = this.service.Settings.Base_API_URL + \"/Documents/Attachments/\" + res.CompanyLogo + \"?\" + cdt;\r\n                }\r\n                else {\r\n                    this.imageUrl = \"/assets/images/old_logo.png\";\r\n                }\r\n            }\r\n        } catch (e) { }\r\n    }\r\n\r\n    async SaveLogo() {\r\n        try {\r\n            if (!this.service.Account.Is_DemoVersion) {//This condition only for demo version\r\n\r\n                this.service.App.ShowLoader = true;\r\n                let obj = this.LogoForm.getRawValue();\r\n                obj.CompanyLogo = this.imageUrl ? this.imageUrl : obj.CompanyLogo;\r\n                obj.LogoName = this.LogoName;\r\n\r\n                let res = await this.service.Data.ExecuteAPI_Post<number>(\"Admin/Logo_Update\", obj);\r\n                if (res > 0) {\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgSettingSaved\"));\r\n                    this.service.App.RefreshData.emit();\r\n                }\r\n                else {\r\n                    this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n                }\r\n                this.service.App.ShowLoader = false;\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, \"This features is not enable for demo version.\");\r\n            }\r\n\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    //logo   \r\n    fileChange(event: any) {\r\n        let file = event.target.files[0];\r\n        if (file) {\r\n            let extension = file.name.replace(/^.*\\./, '');\r\n            if (this.allowedExtensions.indexOf(extension.toLowerCase()) > -1) {\r\n                var myReader: FileReader = new FileReader();\r\n                myReader.onloadend = (e) => {\r\n                    this.imageUrl = <string>myReader.result;\r\n                    this.LogoName = file.name;\r\n                }\r\n                myReader.readAsDataURL(file);\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgSelectValidImage\"));\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\ninterface ApplicationSetting_Model {\r\n    LogoID: number;\r\n    Is_EasyAddOn_Visible: boolean;\r\n    DefaultLanguage: string;\r\n    DefaultPassword: string;\r\n    Is_Chat_Visible: boolean;\r\n    Is_LockUser: boolean;\r\n    CompanyTitle: string;\r\n    CompanyLogo: string;\r\n    Is_Ticket_Search: boolean;\r\n    Is_Solution_Search: boolean;\r\n    Is_Ticket_Search_Client: boolean;\r\n    Is_Solution_Search_Client: boolean;\r\n    Is_Admin_Search: boolean;\r\n}", "\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule, UpperCasePipe } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { LogoComponent } from './logo';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: 'logo', component: LogoComponent },\r\n\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes), CommonModule, SharedModule],\r\n    declarations: [LogoComponent],\r\n\r\n})\r\n\r\nexport class BrandingModule {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
  "mappings": "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",
  "names": ["LogoComponent", "BrandingModule"]
}
