{
  "version": 3,
  "sources": ["angular:jit:template:file:src\\app\\solution\\solution_list.html", "src/app/solution/solution_list.ts", "angular:jit:template:file:src\\app\\solution\\solution_new.html", "src/app/solution/solution_new.ts", "angular:jit:template:file:src\\app\\solution\\solution_detail.html", "src/app/solution/solution_detail.ts", "src/app/solution/solution.module.ts"],
  "sourcesContent": ["\uFEFF\r\n<div class=\"main-panel\" style=\"width:100%;\">\r\n    <div class=\"row breadcrumb\">\r\n        <div class=\"col-12 col-md-6 title\">\r\n            {{'lblSolutionList'| translate:service.CL}}\r\n        </div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <a class=\"link\" routerLink=\"/\">{{'lblHome'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <span>{{'lblSolution'| translate:service.CL}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 stretch-card\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body min-height\">\r\n                        <div class=\"table-header\">\r\n                            <div>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"txtSearch='';refreshGrid(true);\" tooltip=\"{{'tlpRefresh'| translate:service.CL}}\"><i class=\"fa fa-sync\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Add_Solution\" (click)=\"AddRow()\" class=\"btn btn-sm btn-warning tlp\" tooltip=\"{{'tlpAddNew'| translate:service.CL}}\"><i class=\"fa fa-plus\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Edit_Solution\" (click)=\"EditRow()\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpEdit'| translate:service.CL}}\"><i class=\"fa fa-pencil-alt\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_View_Solution\" (click)=\"ViewRow('')\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpView'| translate:service.CL}}\"><i class=\"fa fa-search\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Delete_Solution\" (click)=\"DeleteRow()\" class=\"btn btn-sm btn-danger tlp\" tooltip=\"{{'tlpDelete'| translate:service.CL}}\"><i class=\"fa fa-trash\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Clone_Solution\" (click)=\"CloneSolution()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpCloneSolution'| translate:service.CL}}\"><i class=\"fa fa-clone\"></i></button>\r\n                                <a target=\"_blank\" *ngIf=\"service?.Account?.Is_Print\" (click)=\"Print()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpPrint'| translate:service.CL}}\"><i class=\"fa fa-print\"></i></a>\r\n\r\n                                <div class=\"dropdown d-inline\" *ngIf=\"service?.Account?.Is_Export\">\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpExport'| translate:service.CL}}\" id=\"export\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <i class=\"fa fa-file-excel mr-1\"></i> <i class=\"fa fa-angle-down\"></i>\r\n                                    </button>\r\n                                    <div class=\"dropdown-menu cursor\" aria-labelledby=\"export\">\r\n                                        <div class=\"dropdown-item\" (click)=\"Export('excel')\"><i class=\"fa fa-file-excel\"></i> {{'lblExportToExcel'| translate:service.CL}}</div>\r\n                                        <div class=\"dropdown-item\" (click)=\"Export('pdf')\"><i class=\"fa fa-file-pdf\"></i> {{'lblExportToPDF'| translate:service.CL}}</div>\r\n                                        <div class=\"dropdown-item\" (click)=\"Export('csv')\"><i class=\"fa fa-file-alt\"></i> {{'lblExportToCSV'| translate:service.CL}}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"table-filter\">\r\n                                <input type=\"text\" *ngIf=\"service?.Account?.Is_Solution_Search\" class=\"form-control form-control-sm\" name=\"filter\" placeholder=\"{{'phSearch'| translate:service.CL}}\" [(ngModel)]=\"txtSearch\" (keyup)=\"service.App.searchFilter.emit($event.target.value);\">\r\n                                <button *ngIf=\"service?.Account?.Is_Column_Filter_Solution\" class=\"btn btn-sm btn-secondary tlp\" tooltip=\"{{'tlpShowHideColumnFilter'| translate:service.CL}}\" type=\"button\" (click)=\"ShowHideColumnFilter()\"><i class=\"fa fa-eye-slash\"></i></button>\r\n                                <div class=\"dropdown dropleft\" *ngIf=\"service?.Account?.Is_ColumnChooser_Visible\">\r\n                                    <button class=\"btn btn-sm btn-secondary tlp\" data-toggle=\"dropdown\" tooltip=\"{{'tlpColumnChooser'| translate:service.CL}}\" type=\"button\">\r\n                                        <i class=\"fa fa-cog\"></i>\r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu max-dropdown-overflow\" (click)=\"$event.stopPropagation()\">\r\n                                        <ng-container *ngFor=\"let filter of gridFilter;let i = index;\">\r\n                                            <li *ngIf=\"filter.ColumnName != 'HasAttachment'\" class=\"dropdown-item\">\r\n                                                <div class=\"custom-control custom-checkbox\">\r\n                                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"chkfltr-{{i}}\" [(ngModel)]=\"filter.Is_Visible\" (change)=\"change_columnchooser(filter, $event.target.value, i)\">\r\n                                                    <label class=\"custom-control-label\" for=\"chkfltr-{{i}}\">\r\n                                                        <span>{{filter.DisplayText | translate:service.CL}}</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ng-container>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"position:relative;\">\r\n                            <ticket-commongrid #commongrid [ModuleType]=\"'solution'\" *ngIf=\"allItems.length > 0\" [records]=\"allItems\" [gridfilter]=\"gridFilter\" [SearchText]=\"txtSearch\"\r\n                                               [pagesize]=\"10\" (change)=\"pageChanged($event)\" [ShowSorting]=\"true\"\r\n                                               [PagingType]=\"'nextprevnumberadvanced'\" [ShowPagesize]=\"true\" [ShowFilter]=\"true\" [ShowCheckbox]=\"true\"\r\n                                               [Edit]=\"true\" (EditRow)=\"EditRowDBClick($event)\" (ViewRow)=\"service?.Account?.Is_View_Solution && ViewRow($event)\">\r\n                            </ticket-commongrid>\r\n                            <div class=\"nodata\" *ngIf=\"!isLoading && allItems.length == 0\">\r\n                                <span>{{'lblNoData'| translate:service.CL}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"isLoading\" class=\"overlay-inner\">\r\n                            <i class=\"fa fa-circle-notch fa-spin\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n<row-view #RowView></row-view>", "import { Component, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { SystemService } from '../shared/SystemService';\r\nimport { GridFilter, Solution_Model } from '../shared/common_model';\r\nimport { ticket_commongrid_Component } from '../shared/grid/ticket_commongrid';\r\nimport { Row_ViewComponent } from '../dashboard/row_view';\r\nimport { AlertType } from '../shared/common_model';\r\ndeclare var $: JQueryStatic;\r\n\r\n@Component({\r\n    templateUrl: './solution_list.html'\r\n})\r\n\r\nexport class Solution_ListComponent {\r\n    isLoading = false; sub: any; allItems_main: Array<Solution_Model> = []; allItems: Array<Solution_Model> = []; txtSearch = \"\";\r\n    totalitems: number; gridFilter: Array<GridFilter> = [];\r\n    AgentList: Array<any> = []; selectedAgent: any;\r\n    @ViewChild(Row_ViewComponent) public Row_View: Row_ViewComponent;\r\n    @ViewChild('commongrid') commongrid: ticket_commongrid_Component;\r\n    constructor(public fb: UntypedFormBuilder, public service: SystemService, public route: ActivatedRoute, public router: Router, public location: Location) {\r\n\r\n        this.service.GoTo_ScrollTop(window);\r\n\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblAttachment\", ColumnName: \"HasAttachment\", Type: \"icon\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblSolutionID\", ColumnName: \"DisplaySolutionID\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblSubject\", ColumnName: \"Subject\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblCategory\", ColumnName: \"CategoryName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblSubCategory\", ColumnName: \"SubCategoryName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblItem\", ColumnName: \"ItemName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblComments\", ColumnName: \"Comments\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblKeywords\", ColumnName: \"MetaKeywords\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblCreatedUser\", ColumnName: \"CreatedUserName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblIsClientVisible\", ColumnName: \"Is_Client_Visible\", Condition: \"no\", Type: \"bool\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblIsActive\", ColumnName: \"Is_Active\", Condition: \"no\", Type: \"bool\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblCreatedDate\", ColumnName: \"CreatedDate\", Condition: \"no\", Type: \"datetime\", Value: \"\", Is_Visible: true, Width: 11 });\r\n\r\n        //get-set last remembered columns\r\n        this.service.App.get_cached_column('solution_colums', this.gridFilter);\r\n    }\r\n    ngOnInit() {\r\n        this.bindData();\r\n        this.sub = this.service.Data.registerReceiver<any>('Get_Language_Refresh').subscribe((res) => {\r\n            if (res.UserID == this.service.Account.UserID && this.router.url.toLowerCase() == '/solution') {\r\n                $(\".subtooltip\")[\"webuiPopover\"]('destroy');\r\n                this.bindToolTip();\r\n            }\r\n        });\r\n    }\r\n    ngAfterViewInit() { }\r\n    ngOnDestroy() { if (this.sub) { this.sub.unsubscribe(); } }\r\n\r\n    async bindData(isRefresh = false) {\r\n        try {\r\n            this.isLoading = true;\r\n            let res = await this.service.Data.ExecuteAPI_Post<Array<Solution_Model>>(\"Solution/Get_Solution_List\", { Is_Agent: true });\r\n            if (res) {\r\n                this.allItems_main = this.allItems = res;\r\n                this.totalitems = res.length;\r\n\r\n                if (isRefresh) { this.service.App.refreshGrid.emit(); }\r\n            }\r\n            this.isLoading = false;\r\n        } catch (e) {\r\n            this.isLoading = false;\r\n        }\r\n    }\r\n    pageChanged(obj: any) { this.bindToolTip(); }\r\n\r\n    bindToolTip() {\r\n        let service = this.service;\r\n        window.setTimeout(() => {\r\n            $(\".subtooltip\").each(function () {\r\n                var $this = $(this);\r\n                let obj: any = $this.find('#ID').val();\r\n                let strSplit = obj.split(\"|\"); //ID|Subject|Category|Status\r\n                let site_url = service.Settings.API_URL + \"/Home/Get_Tooltip?ModuleType=solution&lang=\" + service.CL + \"&ID=\" + strSplit[0] + \"&Subject=\" + strSplit[1] + \"&Category=\" + strSplit[2];\r\n                $(this)[\"webuiPopover\"]({\r\n                    container: $this,//'.subtooltip',\r\n                    placement: service.Is_RTL() ? 'left' : 'right',\r\n                    animation: 'fade',\r\n                    type: 'async',\r\n                    url: site_url,\r\n                    async: { type: 'POST', before: function (that, xhr) { xhr.setRequestHeader(\"Authorization\", 'Bearer ' + service.Data.BearerToken); } },\r\n                    cache: true,\r\n                    width: 600,\r\n                    height: 'auto',\r\n                    trigger: 'hover',\r\n                    delay: {\r\n                        show: 400,\r\n                        hide: 100\r\n                    },\r\n                    closeable: false,\r\n                    offsetTop: 0,\r\n                });\r\n            });\r\n        }, 300);\r\n    }\r\n\r\n    refreshGrid(isRefresh) {\r\n        this.bindData(isRefresh);\r\n    }\r\n\r\n    change_columnchooser(filter: GridFilter, value, index) {\r\n        filter.Is_Visible != value;\r\n        let lst = this.gridFilter.map((d, index) => { return { col: d.ColumnName, show: d.Is_Visible, ind: index } });\r\n        this.service.App.set_localstorage('solution_colums', lst);\r\n    }\r\n\r\n    AddRow() {\r\n        this.router.navigate(['/solution/add']);\r\n    }\r\n    EditRow() {\r\n        let selectedRow = this.allItems.filter((x) => x.selectedRow);\r\n        if (selectedRow.length == 0) {\r\n            this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectRow\"));\r\n        }\r\n        else if (selectedRow.length > 1) {\r\n            this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectOnlyOneRow\"));\r\n        }\r\n        else {\r\n            let ID = selectedRow[0][\"DisplaySolutionID\"];\r\n            this.EditSolution(ID);\r\n        }\r\n    }\r\n    EditRowDBClick(RowItem: any) {\r\n        if (!RowItem.isTrusted && RowItem) {\r\n            this.EditSolution(RowItem.DisplaySolutionID);\r\n        }\r\n    }\r\n    EditSolution(DisplaySolutionID) {\r\n        $(\".subtooltip\")[\"webuiPopover\"]('destroy');\r\n        this.router.navigate([\"/solution/detail\", DisplaySolutionID]);//redirect to Solution detail page\r\n    }\r\n    async DeleteRow() {\r\n        let selectedRow = this.allItems.filter((x) => x.selectedRow).map(d => d.SolutionID).join();\r\n        if (selectedRow.length == 0) {\r\n            this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectRow\"));\r\n        } else {\r\n            try {\r\n                if (confirm(this.service.Translator.instant(\"msgDeleteSelectedItems\"))) {\r\n                    this.service.App.ShowLoader = true;\r\n                    let res = await this.service.Data.ExecuteAPI_Post<number>(\"Solution/Solution_Delete\", { SolutionIDs: selectedRow });\r\n                    if (res > 0) {\r\n                        this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgSolutionDeleted\"));\r\n                        this.refreshGrid(true);\r\n                    }\r\n                    else {\r\n                        this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgErrorSolutionsUsedInAnotherTable\"));\r\n                    }\r\n                    this.service.App.ShowLoader = false;\r\n                }\r\n            } catch (e) {\r\n                this.service.App.ShowLoader = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    ViewRow(RowItem: any) {\r\n        if (RowItem) {\r\n            this.Row_View.open(RowItem, \"solution\");\r\n        }\r\n        else {\r\n            let selectedRow = this.allItems.filter((x) => x.selectedRow);\r\n            if (selectedRow.length == 0) {\r\n                this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectRow\"));\r\n            }\r\n            else if (selectedRow.length > 1) {\r\n                this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectOnlyOneRow\"));\r\n            }\r\n            else {\r\n                this.Row_View.open(selectedRow[0], \"solution\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //CloneSolution\r\n    async CloneSolution() {\r\n        let selectedRow = this.allItems.filter((x) => x.selectedRow);\r\n        if (selectedRow.length == 0) {\r\n            this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectRow\"));\r\n        }\r\n        else if (selectedRow.length > 1) {\r\n            this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectOnlyOneRow\"));\r\n        }\r\n        else {\r\n            try {\r\n                let ID = selectedRow[0][\"SolutionID\"];\r\n                if (confirm(this.service.Translator.instant(\"msgCloneSelectedSolution\"))) {\r\n                    this.service.App.ShowLoader = true;\r\n                    let res = await this.service.Data.ExecuteAPI_Post<any>(\"Solution/Solution_Clone\", { SolutionID: ID });\r\n                    if (res) {\r\n                        this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgSolutionCloned\"));\r\n                        this.refreshGrid(true);\r\n                        this.service.GoTo_ScrollTop(window);\r\n                    }\r\n                    this.service.App.ShowLoader = false;;\r\n                }\r\n            } catch (e) {\r\n                this.service.App.ShowLoader = false;;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Print\r\n    Print() {\r\n        let selectedRow = this.allItems.filter((x) => x.selectedRow).map(d => d.SolutionID).join();\r\n        if (selectedRow.length == 0) {\r\n            this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgSelectSolutionsToPrint\"));\r\n        } else {\r\n            let url = this.service.Settings.API_URL + \"/Home/Print?ids=\" + selectedRow + \"&type=solution&lang=\" + this.service.CL;\r\n            window.open(url, \"Print Preview\");\r\n        }\r\n        this.ClearCheckbox();//clear checkbox\r\n    }\r\n\r\n    //Export\r\n    async Export(ftype: string) {\r\n        try {\r\n            let items = this.commongrid.records;\r\n            if (items.length > 0) {\r\n                this.service.App.ShowLoader = true;\r\n                let columns = this.gridFilter.filter(d => d.Is_Visible && d.ColumnName != 'HasAttachment').map((val) => {\r\n                    val.DisplayText = this.service.Translator.instant(val.DisplayText);\r\n                    return val;\r\n                });\r\n                let obj = { model: items, Columns: columns, Type: ftype };\r\n\r\n                let res = await this.service.Data.ExecuteAPI_Post<any>(\"Admin/Export_Data\", obj);\r\n                if (res) {\r\n                    let filename = \"\"; let filetype = \"\";\r\n                    if (ftype == 'excel') { filename = \"Solutions.xlsx\"; filetype = \"application/octet-stream\"; }\r\n                    else if (ftype == 'pdf') { filename = \"Solutions.pdf\"; filetype = \"application/pdf\"; }\r\n                    else if (ftype == 'csv') { filename = \"Solutions.csv\"; filetype = \"application/octet-stream\"; }\r\n\r\n                    window[\"saveAs\"](new Blob([window[\"base64js\"].toByteArray(res.data)], { type: filetype }), filename);\r\n                }\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgNoRecordsToExport\"));\r\n            }\r\n\r\n            this.ClearCheckbox();//clear checkbox\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    //ShowHideColumnFilter\r\n    Is_ShowColumnFilter = true;\r\n    ShowHideColumnFilter() {\r\n        this.Is_ShowColumnFilter = !this.Is_ShowColumnFilter;\r\n        this.service.App.showhideColumnFilter.emit(this.Is_ShowColumnFilter);\r\n    }\r\n\r\n    //Clear Checkbox\r\n    ClearCheckbox() {\r\n        this.service.App.clearAllCheckbox.emit();\r\n    }\r\n}\r\n\r\n", "\uFEFF\r\n<div class=\"main-panel\" style=\"width:100%;\">\r\n    <div class=\"row breadcrumb\">\r\n        <div class=\"col-12 col-md-6 title\">\r\n            {{'lblNewSolution'| translate:service.CL}}\r\n        </div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <a class=\"link\" routerLink=\"/\">{{'lblHome'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <a class=\"link\" routerLink=\"/solution\">{{'lblSolution'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <span>{{'lblNewSolution'| translate:service.CL}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 stretch-card\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form [formGroup]=\"SolutionForm\" (ngSubmit)=\"SolutionForm.valid && SaveSolution()\" #f=\"ngForm\" novalidate>\r\n                            <div class=\"card-title\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpSave'| translate:service.CL}}\"><i class=\"fa fa-save\"></i></button>\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" (click)=\"Is_SaveAndclose = true;\" tooltip=\"{{'tlpSaveAndClose'| translate:service.CL}}\">\r\n                                    <i class=\"fa fa-save\"></i>\r\n                                    <span class=\"save-close\"><i class=\"fa fa-times\"></i></span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"BackToList();\" tooltip=\"{{'tlpCancel'| translate:service.CL}}\"><i class=\"fa fa-times\"></i> {{'btnCancel'| translate:service.CL}}</button>\r\n                            </div>\r\n                            <div class=\"modal-body1\">\r\n                                <div class=\"form-box row\">\r\n                                    <div class=\"col-12 col-xl-4 col-md-6\">\r\n                                        <div class=\"form-group row\" [ngClass]=\"{'has-error': f.submitted && !SolutionForm.controls.CategoryID.valid}\">\r\n                                            <label class=\"col-12 col-md-4 col-form-label\">{{'lblCategory'| translate:service.CL}} <span class=\"text-danger\">*</span></label>\r\n                                            <div class=\"col-12 col-md-8\">\r\n                                                <select #focus class=\"form-control custom-select\" formControlName=\"CategoryID\" (change)=\"Change_Category($event.target.value)\">\r\n                                                    <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.CategoryList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-xl-4 col-md-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-md-4 col-form-label\">{{'lblSubCategory'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-md-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"SubCategoryID\" (change)=\"Change_SubCategory($event.target.value)\">\r\n                                                    <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of Filter_SubCategory_List\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 col-xl-4 col-md-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-md-4 col-form-label\">{{'lblItem'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-md-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"ItemID\">\r\n                                                    <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of Filter_ItemList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 col-md-6\"></div>\r\n                                    <div class=\"col-12 form-group\" [ngClass]=\"{'has-error': f.submitted && !SolutionForm.controls.Subject.valid}\">\r\n                                        <label>{{'lblSubject'| translate:service.CL}} <span class=\"text-danger\">*</span></label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Subject\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblSubject'| translate:service.CL}}\" />\r\n                                    </div>\r\n                                    <div class=\"col-12 form-group editor-height\">\r\n                                        <label>{{'lblSolution'| translate:service.CL}} <span class=\"text-danger\">*</span></label>\r\n                                        <textarea id=\"txtDesc\" class=\"form-control kendoEditor\" formControlName=\"Description\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblSolution'| translate:service.CL}}\"></textarea>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 col-md-6 form-group\">\r\n                                        <label>{{'lblKeywords'| translate:service.CL}}</label>\r\n                                        <textarea class=\"form-control min-ht-60\" formControlName=\"MetaKeywords\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblKeywords'| translate:service.CL}}\"></textarea>\r\n                                        <small class=\"text-muted\">{{'lblKeywordsNote1'| translate:service.CL}}</small> <br />\r\n                                        <small class=\"text-muted\">{{'lblKeywordsNote2'| translate:service.CL}}</small>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-md-6 form-group\">\r\n                                        <label>{{'lblComments'| translate:service.CL}}</label>\r\n                                        <textarea class=\"form-control min-ht-100\" formControlName=\"Comments\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblComments'| translate:service.CL}}\"></textarea>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-sm-12 col-md-6 form-group\">\r\n                                        <div class=\"custom-control custom-checkbox\">\r\n                                            <input id=\"frmIs_Client_Visible\" type=\"checkbox\" formControlName=\"Is_Client_Visible\" class=\"custom-control-input\">\r\n                                            <label class=\"custom-control-label\" for=\"frmIs_Client_Visible\">{{'lblIsClientVisible'| translate:service.CL}}</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-sm-12 col-md-6 form-group\">\r\n                                        <div class=\"custom-control custom-checkbox\">\r\n                                            <input id=\"frmIs_Active\" type=\"checkbox\" formControlName=\"Is_Active\" class=\"custom-control-input\">\r\n                                            <label class=\"custom-control-label\" for=\"frmIs_Active\">{{'lblIsActive'| translate:service.CL}}</label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"col-12 mt-5 mb-2 d-flex justify-content-between\">\r\n                                        <h5>{{'lblAttachments'| translate:service.CL}}</h5>\r\n                                        <button type=\"button\" class=\"btn btn-info btn-sm\" (click)=\"flAttachment.click();\">\r\n                                            <i *ngIf=\"isAttachLoading\" class=\"fa fa-circle-notch fa-spin mr-1\"></i>  {{'lblUploadFiles'| translate:service.CL}}\r\n                                        </button>\r\n                                        <input #flAttachment type=\"file\" multiple (change)=\"fileChange($event)\" class=\"hide\" />\r\n                                    </div>\r\n                                    <div class=\"col-12 form-group\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <table class=\"table table-bordered table-striped small-btn table-attachment\">\r\n                                                <tr *ngFor=\"let file of lstAttachments;let i = index;\" class=\"bg-light-yellow \">\r\n                                                    <td>\r\n                                                        <i class=\"mr-2\" [ngClass]=\"file.extension | fileType\"></i>\r\n                                                        {{file.name}}\r\n                                                    </td>\r\n                                                    <td width=\"4%\">\r\n                                                        <button type=\"button\" class=\"btn btn-xs btn-danger\" (click)=\"RemoveAttachment(file,'new')\">{{'lblRemove'| translate:service.CL}}</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer form-btn mt-4 pb-0 prl-0\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpSave'| translate:service.CL}}\"><i class=\"fa fa-save\"></i></button>\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" (click)=\"Is_SaveAndclose = true;\" tooltip=\"{{'tlpSaveAndClose'| translate:service.CL}}\">\r\n                                    <i class=\"fa fa-save\"></i>\r\n                                    <span class=\"save-close\"><i class=\"fa fa-times\"></i></span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"BackToList();\" tooltip=\"{{'tlpCancel'| translate:service.CL}}\"><i class=\"fa fa-times\"></i> {{'btnCancel'| translate:service.CL}}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<user-technician (onSave)=\"UserSelectDone($event)\" #UserSelect></user-technician>\r\n", "import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SystemService } from '../shared/SystemService';\r\nimport { KeyValueDefault } from '../shared/common_model';\r\nimport { AlertType } from '../shared/common_model';\r\nimport { FocusInvalidDirective } from '../shared/app.directive';\r\ndeclare var $: JQueryStatic;\r\n\r\n@Component({\r\n    templateUrl: './solution_new.html',\r\n    providers: [FocusInvalidDirective]\r\n})\r\n\r\nexport class Solution_NewComponent {\r\n    isLoading = false; Is_SaveAndclose: boolean = false;\r\n    model: Common_Solution_Detail_Model;\r\n    Filter_SubCategory_List: Array<KeyValueDefault> = []; Filter_ItemList: Array<KeyValueDefault> = [];\r\n    minStDate: Date = new Date();\r\n    SolutionForm: UntypedFormGroup;\r\n    @ViewChild('focus') inpfocus: ElementRef;\r\n    constructor(public fb: UntypedFormBuilder, public service: SystemService, public route: ActivatedRoute, public router: Router) {\r\n        this.service.GoTo_ScrollTop(window);\r\n        this.Not_AllowedExtensions = this.service.Get_NotAllowedExtensions();\r\n        this.InitSolutionForm();\r\n    }\r\n    ngOnInit() {\r\n        setTimeout(() => { this.bindData(); });\r\n    }\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.service.setKendoEditor(\".kendoEditor\");//initialize kendo editor            \r\n            this.inpfocus.nativeElement.focus();\r\n        }, 10);\r\n    }\r\n    InitSolutionForm() {\r\n        this.SolutionForm = this.fb.group({\r\n            SolutionID: [0],\r\n            Subject: [\"\", Validators.required],\r\n            Description: [\"\"],\r\n            CategoryID: [0, Validators.compose([Validators.required, Validators.min(1)])],\r\n            SubCategoryID: [0],\r\n            ItemID: [0],\r\n            MetaKeywords: [\"\"],\r\n            Comments: [\"\"],\r\n            Is_Client_Visible: [false],\r\n            Is_Active: [true]\r\n        });\r\n    }\r\n\r\n    async bindData() {\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n            this.model = await this.service.Data.ExecuteAPI_Post<Common_Solution_Detail_Model>(\"Solution/Get_Solution_Detail_Data\");\r\n            this.SetDefaultValue();\r\n\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n    SetDefaultValue() {\r\n        let Category = this.model.CategoryList.find(d => d.Is_Default);\r\n        this.SolutionForm.controls[\"CategoryID\"].setValue(Category == null ? 0 : Category.Value);\r\n\r\n        window.setTimeout(() => { if (Category) { this.Change_Category(Category.Value); } }, 10);\r\n    }\r\n    async SaveSolution() {\r\n        try {\r\n            let obj = this.SolutionForm.getRawValue();\r\n            obj.Description = $(\"#txtDesc\").data(\"kendoEditor\").value();\r\n\r\n            if (obj.Description) {\r\n                this.service.App.ShowLoader = true;\r\n                let res = await this.service.Data.ExecuteAPI_Post<any>(\"Solution/Solution_Update\", { model: obj, attachment: this.lstAttachments ? this.lstAttachments : [] });\r\n                if (res) {//tuple<long,string>\r\n                    window.setTimeout(() => {\r\n                        if (this.Is_SaveAndclose) {\r\n                            this.router.navigate([\"/solution\"]);\r\n                        }\r\n                        else {\r\n                            this.router.navigate([\"/solution/detail\", res.Item2]);//redirect to Solution detail page\r\n                        }\r\n                    }, 300);\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgSolutionCreated\"));\r\n                }\r\n                else {\r\n                    this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n                }\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgSolutionNotEmpty\"));\r\n            }\r\n\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    Change_Category(CategoryID: number, SubCategoryID: number = 0) {\r\n        this.Filter_SubCategory_List = this.model.SubCategoryList.filter(d => d.MainID == CategoryID);\r\n        this.Change_SubCategory(SubCategoryID > 0 ? SubCategoryID : 0);\r\n    }\r\n    Change_SubCategory(SubCategoryID: number) {\r\n        this.Filter_ItemList = this.model.ItemList.filter(d => d.MainID == SubCategoryID);\r\n        if (this.Filter_ItemList.length == 0) { this.SolutionForm.controls[\"ItemID\"].setValue(0); }\r\n    }\r\n\r\n    BackToList() {\r\n        this.router.navigate(['/solution']);\r\n    }\r\n\r\n    //Attachments\r\n    @ViewChild('flAttachment') flAttachment: ElementRef;\r\n    isAttachLoading: boolean = false; lstAttachments: Array<any> = [];\r\n    Not_AllowedExtensions: Array<string> = [];\r\n    fileChange(event: any) {\r\n        let files = event.target.files;// [].slice.call(event.target.files);\r\n        for (var i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n            this.ReadFiles(file); //read files                       \r\n        }\r\n    }\r\n    ReadFiles(file) {\r\n        this.isAttachLoading = true;\r\n        var myReader: FileReader = new FileReader();\r\n        let extension = file.name.replace(/^.*\\./, '');\r\n        if (this.Not_AllowedExtensions.indexOf(extension.toLowerCase()) < 0) {\r\n            myReader.readAsDataURL(file);\r\n            myReader.onloadend = (e) => {\r\n                this.lstAttachments.push({ name: file.name, type: file.type, extension: extension, size: file.size, value: <string>myReader.result });\r\n                this.isAttachLoading = false;\r\n            }\r\n        }\r\n        else {\r\n            this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgFileExtensionNotSupport\"));\r\n            this.isAttachLoading = false;\r\n        }\r\n    }\r\n    RemoveAttachment(item: any, type: string) {\r\n        this.lstAttachments = this.lstAttachments.filter(d => d != item);\r\n    }\r\n\r\n\r\n    UserSelectDone(item: any) { }\r\n}\r\n\r\ninterface Common_Solution_Detail_Model {\r\n    CategoryList: Array<KeyValueDefault>;\r\n    SubCategoryList: Array<KeyValueDefault>;\r\n    ItemList: Array<KeyValueDefault>;\r\n}", "\uFEFF\r\n<div class=\"main-panel\" style=\"width:100%;\">\r\n    <div class=\"row breadcrumb\">\r\n        <div class=\"col-12 col-md-6 title\">\r\n            {{'lblEditSolution'| translate:service.CL}}\r\n        </div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <a class=\"link\" routerLink=\"/\">{{'lblHome'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <a class=\"link\" routerLink=\"/solution\">{{'lblSolution'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <span>{{'lblEditSolution'| translate:service.CL}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 stretch-card\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form [formGroup]=\"SolutionForm\" (ngSubmit)=\"SolutionForm.valid && SaveSolution()\" #f=\"ngForm\" novalidate>\r\n                            <div class=\"card-title\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpSave'| translate:service.CL}}\"><i class=\"fa fa-save\"></i></button>\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" (click)=\"Is_SaveAndclose = true;\" tooltip=\"{{'tlpSaveAndClose'| translate:service.CL}}\">\r\n                                    <i class=\"fa fa-save\"></i>\r\n                                    <span class=\"save-close\"><i class=\"fa fa-times\"></i></span>\r\n                                </button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Delete_Solution\" (click)=\"DeleteRow()\" class=\"btn btn-sm btn-danger tlp\" tooltip=\"{{'tlpDelete'| translate:service.CL}}\"><i class=\"fa fa-trash\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Clone_Solution\" (click)=\"CloneSolution()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpCloneSolution'| translate:service.CL}}\"><i class=\"fa fa-clone\"></i></button>\r\n                                <a target=\"_blank\" *ngIf=\"service?.Account?.Is_Print\" (click)=\"Print()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpPrint'| translate:service.CL}}\"><i class=\"fa fa-print\"></i></a>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"BackToList();\" tooltip=\"{{'tlpCancel'| translate:service.CL}}\"><i class=\"fa fa-times\"></i> {{'btnCancel'| translate:service.CL}}</button>\r\n                            </div>\r\n                            <div class=\"modal-body1\">\r\n                                <div class=\"form-box row\">\r\n                                    <div class=\"col-12 col-xl-4 col-md-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-5 col-md-4 col-form-label\">{{'lblSolutionID'| translate:service.CL}} </label>\r\n                                            <div class=\"col-7 col-md-8 col-form-label\"><b>{{SolutionForm.controls.DisplaySolutionID.value}}</b></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-md-8\"></div>\r\n                                    <div class=\"col-12 col-xl-4 col-md-6\">\r\n                                        <div class=\"form-group row\" [ngClass]=\"{'has-error': f.submitted && !SolutionForm.controls.CategoryID.valid}\">\r\n                                            <label class=\"col-12 col-md-4 col-form-label\">{{'lblCategory'| translate:service.CL}} <span class=\"text-danger\">*</span></label>\r\n                                            <div class=\"col-12 col-md-8\">\r\n                                                <select #focus class=\"form-control custom-select\" formControlName=\"CategoryID\" (change)=\"Change_Category($event.target.value)\">\r\n                                                    <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.CategoryList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-xl-4 col-md-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-md-4 col-form-label\">{{'lblSubCategory'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-md-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"SubCategoryID\" (change)=\"Change_SubCategory($event.target.value)\">\r\n                                                    <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of Filter_SubCategory_List\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 col-xl-4 col-md-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-md-4 col-form-label\">{{'lblItem'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-md-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"ItemID\">\r\n                                                    <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of Filter_ItemList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"col-12 col-md-6\"></div>\r\n                                    <div class=\"col-12 form-group\" [ngClass]=\"{'has-error': f.submitted && !SolutionForm.controls.Subject.valid}\">\r\n                                        <label>{{'lblSubject'| translate:service.CL}} <span class=\"text-danger\">*</span></label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Subject\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblSubject'| translate:service.CL}}\" />\r\n                                    </div>\r\n                                    <div class=\"col-12 form-group editor-height\">\r\n                                        <label>{{'lblSolution'| translate:service.CL}} <span class=\"text-danger\">*</span></label>\r\n                                        <textarea id=\"txtDesc\" class=\"form-control kendoEditor\" formControlName=\"Description\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblSolution'| translate:service.CL}}\"></textarea>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 col-md-6 form-group\">\r\n                                        <label>{{'lblKeywords'| translate:service.CL}}</label>\r\n                                        <textarea class=\"form-control min-ht-60\" formControlName=\"MetaKeywords\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblKeywords'| translate:service.CL}}\"></textarea>\r\n                                        <small class=\"text-muted\">{{'lblKeywordsNote1'| translate:service.CL}}</small> <br />\r\n                                        <small class=\"text-muted\">{{'lblKeywordsNote2'| translate:service.CL}}</small>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-md-6 form-group\">\r\n                                        <label>{{'lblComments'| translate:service.CL}}</label>\r\n                                        <textarea class=\"form-control min-ht-100\" formControlName=\"Comments\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblComments'| translate:service.CL}}\"></textarea>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-sm-12 col-md-6 form-group\">\r\n                                        <div class=\"custom-control custom-checkbox\">\r\n                                            <input id=\"frmIs_Client_Visible\" type=\"checkbox\" formControlName=\"Is_Client_Visible\" class=\"custom-control-input\">\r\n                                            <label class=\"custom-control-label\" for=\"frmIs_Client_Visible\">{{'lblIsClientVisible'| translate:service.CL}}</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-sm-12 col-md-6 form-group\">\r\n                                        <div class=\"custom-control custom-checkbox\">\r\n                                            <input id=\"frmIs_Active\" type=\"checkbox\" formControlName=\"Is_Active\" class=\"custom-control-input\">\r\n                                            <label class=\"custom-control-label\" for=\"frmIs_Active\">{{'lblIsActive'| translate:service.CL}}</label>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 mt-5 mb-2 d-flex justify-content-between\">\r\n                                        <h5>{{'lblAttachments'| translate:service.CL}}</h5>\r\n                                        <button type=\"button\" class=\"btn btn-info btn-sm\" (click)=\"flAttachment.click();\">\r\n                                            <i *ngIf=\"isAttachLoading\" class=\"fa fa-circle-notch fa-spin mr-1\"></i>  {{'lblUploadFiles'| translate:service.CL}}\r\n                                        </button>\r\n                                        <input #flAttachment type=\"file\" multiple (change)=\"fileChange($event)\" class=\"hide\" />\r\n                                    </div>\r\n                                    <div class=\"col-12 form-group\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <table class=\"table table-bordered table-striped small-btn table-attachment\">\r\n                                                <tr *ngFor=\"let item of AttachmentList\">\r\n                                                    <td>\r\n                                                        <i class=\"mr-2\" [ngClass]=\"item.Extension | fileType\"></i>\r\n                                                        <a target=\"_blank\" href=\"{{service?.Settings?.Base_API_URL + '/Documents/Attachments/Solution/' + item.FileName}}\"> {{item.DisplayName}}</a>\r\n                                                    </td>\r\n                                                    <td width=\"4%\">\r\n                                                        <button type=\"button\" class=\"btn btn-xs btn-danger\" (click)=\"RemoveAttachment(item,'old')\">{{'lblRemove'| translate:service.CL}}</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr *ngFor=\"let file of lstAttachments;let i = index;\" class=\"bg-light-yellow \">\r\n                                                    <td>\r\n                                                        <i class=\"mr-2\" [ngClass]=\"file.extension | fileType\"></i>\r\n                                                        {{file.name}}\r\n                                                    </td>\r\n                                                    <td width=\"4%\">\r\n                                                        <button type=\"button\" class=\"btn btn-xs btn-danger\" (click)=\"RemoveAttachment(file,'new')\">{{'lblRemove'| translate:service.CL}}</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer form-btn mt-4 pb-0 prl-0\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpSave'| translate:service.CL}}\"><i class=\"fa fa-save\"></i></button>\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" (click)=\"Is_SaveAndclose = true;\" tooltip=\"{{'tlpSaveAndClose'| translate:service.CL}}\">\r\n                                    <i class=\"fa fa-save\"></i>\r\n                                    <span class=\"save-close\"><i class=\"fa fa-times\"></i></span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"BackToList();\" tooltip=\"{{'tlpCancel'| translate:service.CL}}\"><i class=\"fa fa-times\"></i> {{'btnCancel'| translate:service.CL}}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<user-technician (onSave)=\"UserSelectDone($event)\" #UserSelect></user-technician>", "import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SystemService } from '../shared/SystemService';\r\nimport { KeyValueDefault, Description_Model, Solution_Model } from '../shared/common_model';\r\nimport { AlertType } from '../shared/common_model';\r\nimport { FocusInvalidDirective } from '../shared/app.directive';\r\ndeclare var $: JQueryStatic;\r\n\r\n@Component({\r\n    templateUrl: './solution_detail.html',\r\n    providers: [FocusInvalidDirective]\r\n})\r\n\r\nexport class Solution_DetailComponent {\r\n    isLoading = false; Is_SaveAndclose: boolean = false;\r\n    model: Common_Solution_Detail_Model;\r\n    Filter_SubCategory_List: Array<KeyValueDefault> = []; Filter_ItemList: Array<KeyValueDefault> = [];\r\n    minStDate: Date = new Date(); AttachmentList: Array<any> = [];\r\n    SolutionForm: UntypedFormGroup; DisplaySolutionID: string; SolutionID: number;\r\n    @ViewChild('focus') inpfocus: ElementRef;\r\n    constructor(public fb: UntypedFormBuilder, public service: SystemService, public route: ActivatedRoute, public router: Router) {\r\n        this.service.GoTo_ScrollTop(window);\r\n        this.DisplaySolutionID = this.route.snapshot.paramMap.get(\"id\");\r\n        this.InitSolutionForm();\r\n    }\r\n    ngOnInit() {\r\n        setTimeout(() => { this.bindData(); });\r\n    }\r\n    ngAfterViewInit() {\r\n        this.inpfocus.nativeElement.focus();\r\n    }\r\n    InitSolutionForm() {\r\n        this.SolutionForm = this.fb.group({\r\n            SolutionID: [0],\r\n            DisplaySolutionID: [\"\"],\r\n            Subject: [\"\", Validators.required],\r\n            Description: [\"\"],\r\n            CategoryID: [0, Validators.compose([Validators.required, Validators.min(1)])],\r\n            SubCategoryID: [0],\r\n            ItemID: [0],\r\n            MetaKeywords: [\"\"],\r\n            Comments: [\"\"],\r\n            Is_Client_Visible: [false],\r\n            Is_Active: [true]\r\n        });\r\n    }\r\n\r\n    async bindData() {\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n            this.model = await this.service.Data.ExecuteAPI_Post<Common_Solution_Detail_Model>(\"Solution/Get_Solution_Detail_Data\");\r\n            this.SetDefaultValue();\r\n\r\n            let res = await this.service.Data.ExecuteAPI_Post<Solution_Model>(\"Solution/Get_Solution_ByID\", { SolutionID: 0, DisplaySolutionID: this.DisplaySolutionID });\r\n            if (res) {\r\n                this.SolutionForm.patchValue(res);\r\n                this.bindDescription();//set description value\r\n                this.SolutionID = res.SolutionID;\r\n                if (res.CategoryID) { this.Change_Category(res.CategoryID, res.SubCategoryID); }\r\n            }\r\n            this.bindSolutionAttachment();\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    async bindDescription() {\r\n        try {\r\n            let res = await this.service.Data.ExecuteAPI_Post<Description_Model>(\"Dashboard/Get_DescriptionByID\", { ModuleType: \"solution\", ID: this.DisplaySolutionID });\r\n            if (res) {\r\n                this.SolutionForm.controls[\"Description\"].setValue(res.Description);\r\n                setTimeout(() => { this.service.setKendoEditor(\".kendoEditor\"); }, 10);//initialize kendo editor                \r\n                window.setTimeout(() => { this.service.App.ShowLoader = false }, 200);\r\n            }\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    SetDefaultValue() {\r\n        let Category = this.model.CategoryList.find(d => d.Is_Default);\r\n        this.SolutionForm.controls[\"CategoryID\"].setValue(Category == null ? 0 : Category.Value);\r\n        window.setTimeout(() => { if (Category) { this.Change_Category(Category.Value); } }, 10);\r\n    }\r\n    async SaveSolution() {\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n            let obj = this.SolutionForm.getRawValue();\r\n            obj.Description = $(\"#txtDesc\").data(\"kendoEditor\").value();\r\n\r\n            if (obj.Description) {\r\n                let res = await this.service.Data.ExecuteAPI_Post<any>(\"Solution/Solution_Update\", { model: obj, attachment: this.lstAttachments ? this.lstAttachments : [] });\r\n                if (res) {//tuple<long,string>\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgSolutionUpdated\"));\r\n                    if (this.Is_SaveAndclose) {\r\n                        window.setTimeout(() => { this.router.navigate([\"/solution\"]); }, 300);\r\n                    }\r\n                    else {\r\n                        if (this.lstAttachments.length > 0) { this.lstAttachments = []; this.bindSolutionAttachment(); }\r\n                        this.service.GoTo_ScrollTop(window);\r\n                    }\r\n                }\r\n                else {\r\n                    this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n                }\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgSolutionNotEmpty\"));\r\n            }\r\n\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    Change_Category(CategoryID: number, SubCategoryID: number = 0) {\r\n        this.Filter_SubCategory_List = this.model.SubCategoryList.filter(d => d.MainID == CategoryID);\r\n        this.Change_SubCategory(SubCategoryID > 0 ? SubCategoryID : 0);\r\n    }\r\n    Change_SubCategory(SubCategoryID: number) {\r\n        this.Filter_ItemList = this.model.ItemList.filter(d => d.MainID == SubCategoryID);\r\n        if (this.Filter_ItemList.length == 0) { this.SolutionForm.controls[\"ItemID\"].setValue(0); }\r\n    }\r\n\r\n    BackToList() {\r\n        this.router.navigate(['/solution']);\r\n    }\r\n    async DeleteRow() {\r\n        try {\r\n            if (confirm(this.service.Translator.instant(\"msgDeleteSelectedItems\"))) {\r\n                this.service.App.ShowLoader = true;\r\n                let res = await this.service.Data.ExecuteAPI_Post<number>(\"Solution/Solution_Delete\", { SolutionIDs: this.SolutionID });\r\n                if (res > 0) {\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgSolutionDeleted\"));\r\n                    window.setTimeout(() => { this.BackToList(); }, 500);\r\n                }\r\n                else {\r\n                    this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgErrorSolutionsUsedInAnotherTable\"));\r\n                }\r\n                this.service.App.ShowLoader = false;\r\n            }\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    //CloneSolution\r\n    async CloneSolution() {\r\n        try {\r\n            if (confirm(this.service.Translator.instant(\"msgClonethisSolution\"))) {\r\n                this.service.App.ShowLoader = true;\r\n                let res = await this.service.Data.ExecuteAPI_Post<any>(\"Solution/Solution_Clone\", { SolutionID: this.SolutionID });\r\n                if (res) {//tuple<long,string>\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgSolutionCloned\"));\r\n\r\n                    this.SolutionForm.controls[\"SolutionID\"].setValue(res.Item1);\r\n                    this.SolutionForm.controls[\"DisplaySolutionID\"].setValue(res.Item2);\r\n\r\n                    this.service.GoTo_ScrollTop(window);\r\n                    this.router.navigate([\"/solution\"]);\r\n                    window.setTimeout(() => { this.router.navigate([\"/solution/detail\", res.Item2]); }, 20);\r\n                }\r\n                this.service.App.ShowLoader = false;\r\n            }\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n    //Print\r\n    Print() {\r\n        let url = this.service.Settings.API_URL + \"/Home/Print?ids=\" + this.SolutionID + \"&type=solution&lang=\" + this.service.CL;\r\n        window.open(url, \"Print Preview\");\r\n    }\r\n\r\n    //Attachments\r\n    @ViewChild('flAttachment') flAttachment: ElementRef;\r\n    isAttachLoading: boolean = false; lstAttachments: Array<any> = [];\r\n    Not_AllowedExtensions: Array<string> = [];\r\n    async bindSolutionAttachment() {\r\n        this.Not_AllowedExtensions = this.service.Get_NotAllowedExtensions();\r\n        this.AttachmentList = await this.service.Data.ExecuteAPI_Post<Array<any>>(\"Solution/Get_SolutionAttachment_ByID\", { SolutionID: this.SolutionID });\r\n    }\r\n\r\n    fileChange(event: any) {\r\n        let files = event.target.files;// [].slice.call(event.target.files);\r\n        for (var i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n            this.ReadFiles(file); //read files                       \r\n        }\r\n    }\r\n    ReadFiles(file) {\r\n        this.isAttachLoading = true;\r\n        var myReader: FileReader = new FileReader();\r\n        let extension = file.name.replace(/^.*\\./, '');\r\n        if (this.Not_AllowedExtensions.indexOf(extension.toLowerCase()) < 0) {\r\n            myReader.readAsDataURL(file);\r\n            myReader.onloadend = (e) => {\r\n                this.lstAttachments.push({ name: file.name, type: file.type, extension: extension, size: file.size, value: <string>myReader.result });\r\n                this.isAttachLoading = false;\r\n            }\r\n        }\r\n        else {\r\n            this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgFileExtensionNotSupport\"));\r\n            this.isAttachLoading = false;\r\n        }\r\n    }\r\n    async RemoveAttachment(item: any, type: string) {\r\n        if (type == 'new') {\r\n            this.lstAttachments = this.lstAttachments.filter(d => d != item);\r\n        }\r\n        else if (type == 'old') {\r\n            try {\r\n                if (confirm(this.service.Translator.instant(\"msgDeleteSelectedAttachments\"))) {\r\n                    this.isAttachLoading = true;\r\n                    let res = await this.service.Data.ExecuteAPI_Post<number>(\"Solution/SolutionAttachment_Delete\", { SolutionAttachmentID: item.SolutionAttachmentID, FileName: item.FileName });\r\n                    if (res > 0) {\r\n                        this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgAttachmentDeleted\"));\r\n                        this.AttachmentList = this.AttachmentList.filter(d => d != item);\r\n                    }\r\n                    else {\r\n                        this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n                    }\r\n                    this.isAttachLoading = false;\r\n                }\r\n            } catch (e) {\r\n                this.isAttachLoading = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    UserSelectDone(item: any) { }\r\n}\r\n\r\ninterface Common_Solution_Detail_Model {\r\n    CategoryList: Array<KeyValueDefault>;\r\n    SubCategoryList: Array<KeyValueDefault>;\r\n    ItemList: Array<KeyValueDefault>;\r\n}\r\n\r\n", "\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule, UpperCasePipe } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { Solution_ListComponent } from './solution_list';\r\nimport { Solution_NewComponent } from './solution_new';\r\nimport { Solution_DetailComponent } from './solution_detail';\r\nimport { AuthGuard } from '../auth.guard';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: Solution_ListComponent, data: { pageProp: 'Show_Solution_Menu' }, canActivate: [AuthGuard] },\r\n    { path: 'add', component: Solution_NewComponent, data: { pageProp: 'Is_Add_Solution' }, canActivate: [AuthGuard] },\r\n    { path: 'detail/:id', component: Solution_DetailComponent, data: { pageProp: 'Is_Edit_Solution' }, canActivate: [AuthGuard]  },\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes), CommonModule, SharedModule],\r\n    declarations: [Solution_ListComponent, Solution_NewComponent, Solution_DetailComponent],\r\n\r\n})\r\n\r\nexport class SolutionModule {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
  "mappings": "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",
  "names": ["Solution_ListComponent", "index", "Solution_NewComponent", "Solution_DetailComponent", "SolutionModule"]
}
