{
  "version": 3,
  "sources": ["angular:jit:template:file:src\\app\\ticket\\ticket_list.html", "src/app/ticket/ticket_list.ts", "angular:jit:template:file:src\\app\\ticket\\ticket_new.html", "src/app/ticket/ticket_new.ts", "angular:jit:template:file:src\\app\\ticket\\ticket_detail.html", "src/app/ticket/ticket_detail.ts", "src/app/ticket/ticket.module.ts"],
  "sourcesContent": ["\uFEFF\r\n<div class=\"main-panel\" style=\"width:100%;\">\r\n    <div class=\"row breadcrumb\">\r\n        <div class=\"col-12 col-md-6 title\">\r\n            {{'lblTicketList'| translate:service.CL}}\r\n        </div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <a class=\"link\" routerLink=\"/\">{{'lblHome'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <span>{{'lblTicket'| translate:service.CL}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 stretch-card\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body min-height\">\r\n                        <div class=\"table-header\">\r\n                            <div>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" tooltip=\"{{'tlpRefresh'| translate:service.CL}}\" (click)=\"txtSearch='';refreshGrid(true);\"><i class=\"fa fa-sync\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Add_Ticket\" (click)=\"AddRow()\" class=\"btn btn-sm btn-warning tlp\" tooltip=\"{{'tlpAddNew'| translate:service.CL}}\"><i class=\"fa fa-plus\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Edit_Ticket\" (click)=\"EditRow()\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpEdit'| translate:service.CL}}\"><i class=\"fa fa-pencil-alt\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_View_Ticket\" (click)=\"ViewRow('')\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpView'| translate:service.CL}}\"><i class=\"fa fa-search\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Delete_Ticket\" (click)=\"DeleteRow()\" class=\"btn btn-sm btn-danger tlp\" tooltip=\"{{'tlpDelete'| translate:service.CL}}\"><i class=\"fa fa-trash\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Clone_Ticket\" (click)=\"CloneTicket()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpCloneTicket'| translate:service.CL}}\"><i class=\"fa fa-clone\"></i></button>\r\n                                <a target=\"_blank\" *ngIf=\"service?.Account?.Is_Print\" (click)=\"Print()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpPrint'| translate:service.CL}}\"><i class=\"fa fa-print\"></i></a>\r\n                                <div class=\"dropdown\" *ngIf=\"service?.Account?.Is_Export\">\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpExport'| translate:service.CL}}\" id=\"export\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <i class=\"fa fa-file-excel mr-1\"></i> <i class=\"fa fa-angle-down\"></i>\r\n                                    </button>\r\n                                    <div class=\"dropdown-menu cursor\" aria-labelledby=\"export\">\r\n                                        <div class=\"dropdown-item\" (click)=\"Export('excel')\"><i class=\"fa fa-file-excel\"></i> {{'lblExportToExcel'| translate:service.CL}}</div>\r\n                                        <div class=\"dropdown-item\" (click)=\"Export('pdf')\"><i class=\"fa fa-file-pdf\"></i> {{'lblExportToPDF'| translate:service.CL}}</div>\r\n                                        <div class=\"dropdown-item\" (click)=\"Export('csv')\"><i class=\"fa fa-file-alt\"></i> {{'lblExportToCSV'| translate:service.CL}}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Close_Ticket\" (click)=\"OpenCloseTicket()\" class=\"btn btn-sm btn-danger tlp\" tooltip=\"{{'tlpCloseTickets'| translate:service.CL}}\"><i class=\"fa fa-times\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Pickup\" (click)=\"PickUp()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpPickUp'| translate:service.CL}}\"><i class=\"fa fa-shipping-fast mr-1\"></i> {{'btnPickUp'| translate:service.CL}}</button>\r\n\r\n                                <div class=\"dropdown\">\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" tooltip=\"{{'tlpGridFilter'| translate:service.CL}}\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <i class=\"fa fa-filter\"></i> {{selectedFilterText | translate:service.CL}} <i class=\"fa fa-angle-down\"></i>\r\n                                    </button>\r\n                                    <div class=\"dropdown-menu cursor\">\r\n                                        <div class=\"dropdown-item\" *ngFor=\"let item of FilterList\" [class.active]=\"selectedFilterType == item.Value\" (click)=\"selectedFilterText=item.Key;selectedFilterType=item.Value;FilterChange(item.Value)\">\r\n                                            {{item.Key | translate:service.CL}}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"dropdown\" *ngIf=\"service?.Account?.Is_AssignTo_Dropdown\">\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" tooltip=\"{{'lblAssignAgent'| translate:service.CL}}\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                        <i class=\"fa fa-share\"></i> {{'lblAssignAgent'| translate:service.CL}} <i class=\"fa fa-angle-down\"></i>\r\n                                    </button>\r\n                                    <div class=\"dropdown-menu cursor\">                                       \r\n                                        <div class=\"dropdown-item\" *ngFor=\"let item of AgentList\" [class.active]=\"selectedAgent == item.UserID\" (click)=\"selectedAgent=item.UserID;AssignToUser(item)\">{{item.DisplayName}}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"table-filter\">\r\n                                <input type=\"text\" *ngIf=\"service?.Account?.Is_Ticket_Search\" class=\"form-control form-control-sm\" name=\"filter\" placeholder=\"{{'phSearch'| translate:service.CL}}\" [(ngModel)]=\"txtSearch\" (keyup)=\"service.App.searchFilter.emit($event.target.value);\">\r\n                                <button *ngIf=\"service?.Account?.Is_Column_Filter_Ticket\" class=\"btn btn-sm btn-secondary tlp\" tooltip=\"{{'tlpShowHideColumnFilter'| translate:service.CL}}\" type=\"button\" (click)=\"ShowHideColumnFilter()\"><i class=\"fa fa-eye-slash\"></i></button>\r\n                                <div class=\"dropdown dropleft\" *ngIf=\"service?.Account?.Is_ColumnChooser_Visible\">\r\n                                    <button class=\"btn btn-sm btn-secondary tlp\" data-toggle=\"dropdown\" tooltip=\"{{'tlpColumnChooser'| translate:service.CL}}\" type=\"button\">\r\n                                        <i class=\"fa fa-cog\"></i>\r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu max-dropdown-overflow\" (click)=\"$event.stopPropagation()\">\r\n                                        <ng-container *ngFor=\"let filter of gridFilter;let i = index;\">\r\n                                            <li *ngIf=\"filter.ColumnName != 'HasAttachment'\" class=\"dropdown-item\">\r\n                                                <div class=\"custom-control custom-checkbox\">\r\n                                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"chkfltr-{{i}}\" [(ngModel)]=\"filter.Is_Visible\" (change)=\"change_columnchooser(filter, $event.target.value, i)\">\r\n                                                    <label class=\"custom-control-label\" for=\"chkfltr-{{i}}\">\r\n                                                        <span *ngIf=\"filter.ColumnName == 'ProfilePicture'\">{{'lblProfilePicture' | translate:service.CL}}</span>\r\n                                                        <span *ngIf=\"filter.ColumnName != 'ProfilePicture'\">{{filter.DisplayText | translate:service.CL}}</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ng-container>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style=\"position:relative;\">\r\n                            <ticket-commongrid #commongrid [ModuleType]=\"'ticket'\" *ngIf=\"allItems.length > 0\" [records]=\"allItems\" [gridfilter]=\"gridFilter\" [SearchText]=\"txtSearch\"\r\n                                               [pagesize]=\"10\" (change)=\"pageChanged($event)\" [ShowSorting]=\"true\"\r\n                                               [PagingType]=\"'nextprevnumberadvanced'\" [ShowPagesize]=\"true\" [ShowFilter]=\"Is_ShowColumnFilter\" [ShowCheckbox]=\"true\"\r\n                                               [Edit]=\"true\" (EditRow)=\"EditRowDBClick($event)\" (ViewRow)=\"service?.Account?.Is_View_Ticket && ViewRow($event)\">\r\n                            </ticket-commongrid>\r\n                            <div class=\"nodata\" *ngIf=\"!isLoading && allItems.length == 0\">\r\n                                <span>{{'lblNoData'| translate:service.CL}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"isLoading\" class=\"overlay-inner\">\r\n                            <i class=\"fa fa-circle-notch fa-spin\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n\r\n<modal-dialog #modalCloseTicket [backDrop]=\"false\" modalClass=\"modal-md\" modalHeader=\"{{'lblCloseTicket' | translate:service.CL}}\">\r\n    <form [formGroup]=\"CloseTicketForm\" (ngSubmit)=\"CloseTicketForm.valid && CloseTicket()\" #f=\"ngForm\" novalidate>\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-box row\">\r\n                <div class=\"col-12 col-md-6 form-group\" [ngClass]=\"{'has-error': f.submitted && !CloseTicketForm.controls.StatusID.valid}\">\r\n                    <label>{{'lblStatus'| translate:service.CL}}</label>\r\n                    <select class=\"form-control\" formControlName=\"StatusID\" autofocus>\r\n                        <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                        <option *ngFor=\"let item of CLosedStatusList\" [value]=\"item.StatusID\">{{item.Name}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-12 col-md-6 form-group\" [ngClass]=\"{'has-error': f.submitted && !CloseTicketForm.controls.TicketCloseModeID.valid}\">\r\n                    <label>{{'lblTicketCloseMode'| translate:service.CL}}</label>\r\n                    <select class=\"form-control\" formControlName=\"TicketCloseModeID\">\r\n                        <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                        <option *ngFor=\"let item of TicketCloseModeList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-12 form-group\">\r\n                    <label>{{'lblReason'| translate:service.CL}}</label>\r\n                    <textarea class=\"form-control\" formControlName=\"StatusCloseReason\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblReasonForClosedTicket'| translate:service.CL}}\"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer form-btn\">\r\n            <button type=\"submit\" class=\"btn btn-teal\">{{'btnCloseTicket'| translate:service.CL}}</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modalCloseTicket.close()\">{{'btnCancel'| translate:service.CL}}</button>\r\n        </div>\r\n    </form>\r\n</modal-dialog>\r\n\r\n<row-view #RowView></row-view>\r\n\r\n\r\n", "import { Component, ViewChild, ViewContainerRef, AfterViewInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { SystemService } from '../shared/SystemService';\r\nimport { GridFilter, KeyValue, KeyValueString, Ticket_Model, Ticket_Model_Export } from '../shared/common_model';\r\nimport { ModalDialog } from '../shared/modal.dialog';\r\nimport { ticket_commongrid_Component } from '../shared/grid/ticket_commongrid';\r\n\r\nimport { Row_ViewComponent } from '../dashboard/row_view';\r\nimport { AlertType } from '../shared/common_model';\r\ndeclare var $: JQueryStatic;\r\n\r\n\r\n@Component({\r\n    templateUrl: './ticket_list.html'\r\n})\r\n\r\nexport class Ticket_ListComponent {\r\n    isLoading = false; sub: any; allItems_main: Array<Ticket_Model> = []; allItems: Array<Ticket_Model> = []; txtSearch = \"\";\r\n    totalitems: number; gridFilter: Array<GridFilter> = [];\r\n    FilterList: Array<KeyValueString> = []; selectedFilterType: string = \"\"; selectedFilterText: string = \"lblAllTickets\"; flType: string = \"\";\r\n    AgentList: Array<any> = []; selectedAgent: number = 0;\r\n    @ViewChild(Row_ViewComponent) public Row_View: Row_ViewComponent;\r\n    @ViewChild('commongrid') commongrid: ticket_commongrid_Component;\r\n    constructor(public fb: UntypedFormBuilder, public service: SystemService, public route: ActivatedRoute, public router: Router, public location: Location) {\r\n        this.service.GoTo_ScrollTop(window);\r\n\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblAttachment\", ColumnName: \"HasAttachment\", Type: \"icon\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblTicketID\", ColumnName: \"DisplayTicketID\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblSubject\", ColumnName: \"Subject\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblRequestType\", ColumnName: \"RequestTypeName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblStatus\", ColumnName: \"StatusName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblRequester\", ColumnName: \"RequestedName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblAssignedTo\", ColumnName: \"AssignedName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblCreatedBy\", ColumnName: \"CreatedUserName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblPriority\", ColumnName: \"PriorityName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: true });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblCategory\", ColumnName: \"CategoryName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblSubCategory\", ColumnName: \"SubCategoryName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblItem\", ColumnName: \"ItemName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblUrgency\", ColumnName: \"UrgencyName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblImpact\", ColumnName: \"ImpactName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblDepartment\", ColumnName: \"DepartmentName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblLevel\", ColumnName: \"LevelName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblLocation\", ColumnName: \"LocationName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblTicketMode\", ColumnName: \"TicketModeName\", Condition: \"no\", Type: \"string\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblCreatedDate\", ColumnName: \"CreatedDate\", Condition: \"no\", Type: \"datetime\", Value: \"\", Is_Visible: true, Width: 11 });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblDueDate\", ColumnName: \"DueDate\", Condition: \"no\", Type: \"datetime\", Value: \"\", Is_Visible: false });\r\n        this.gridFilter.push(<GridFilter>{ DisplayText: \"lblClosedDate\", ColumnName: \"ClosedDate\", Condition: \"no\", Type: \"datetime\", Value: \"\", Is_Visible: false });\r\n\r\n        //get-set last remembered columns\r\n        this.service.App.get_cached_column('ticket_colums', this.gridFilter);\r\n\r\n        this.flType = this.route.snapshot.queryParamMap.get(\"type\");\r\n        if (this.flType) {\r\n            this.location.replaceState('/ticket');\r\n        }\r\n\r\n        this.bindFilterList();\r\n    }\r\n    ngOnInit() {\r\n        this.bindData();\r\n        this.InitCloseTicketForm();\r\n        this.sub = this.service.Data.registerReceiver<any>('Get_Language_Refresh').subscribe((res) => {\r\n            if (res.UserID == this.service.Account.UserID && this.router.url.toLowerCase() == '/ticket') {\r\n                $(\".subtooltip\")[\"webuiPopover\"]('destroy');\r\n                this.bindToolTip();\r\n            }\r\n        });\r\n    }\r\n    ngAfterViewInit() { }\r\n    ngOnDestroy() { if (this.sub) { this.sub.unsubscribe(); } }\r\n\r\n    async bindData(isRefresh = false) {\r\n        try {\r\n            this.isLoading = true;\r\n            let account = this.service.Account;\r\n            let res = await this.service.Data.ExecuteAPI_Post<Array<Ticket_Model>>(\"Ticket/Get_Ticket_List\", { Is_Agent: account.Is_Agent, Is_Client: account.Is_Client });\r\n            if (res) {\r\n                this.allItems_main = this.allItems = res;\r\n                this.totalitems = res.length;\r\n\r\n                //Filter change come from dashboard                \r\n                if (this.flType) {\r\n                    this.selectedFilterType = this.flType;\r\n                    this.selectedFilterText = this.FilterList.find(d => d.Value == this.flType).Key;\r\n                    this.FilterChange(this.selectedFilterType);\r\n                    this.flType = \"\";\r\n                }\r\n                else {\r\n                    if (isRefresh) { this.FilterChange(this.selectedFilterType); }\r\n                }\r\n            }\r\n            this.isLoading = false;\r\n        } catch (e) {\r\n            this.isLoading = false;\r\n        }\r\n    }\r\n    pageChanged(obj: any) { this.bindToolTip(); }\r\n    async bindFilterList() {\r\n        this.FilterList.push({ Key: \"lblAllTickets\", Value: \"\" });\r\n        this.FilterList.push({ Key: \"lblOpenTickets\", Value: \"open\" });\r\n        this.FilterList.push({ Key: \"lblCompletedTickets\", Value: \"closed\" });\r\n        this.FilterList.push({ Key: \"lblPendingTickets\", Value: \"pending\" });\r\n        this.FilterList.push({ Key: \"lblUnassignedTickets\", Value: \"unassign\" });\r\n        this.FilterList.push({ Key: \"lblOverdueTickets\", Value: \"overdue\" });\r\n        this.FilterList.push({ Key: \"lblTicketsDueToday\", Value: \"duetoday\" });\r\n        this.FilterList.push({ Key: \"lblAssginedToMeTickets\", Value: \"assignme\" });\r\n        this.FilterList.push({ Key: \"lblMyOpenTickets\", Value: \"myopen\" });\r\n        this.FilterList.push({ Key: \"lblMyCompletedTickets\", Value: \"myclosed\" });\r\n        this.FilterList.push({ Key: \"lblMyOpenAndUnassigned\", Value: \"myunassign\" });\r\n        this.FilterList.push({ Key: \"lblMyOverdueTickets\", Value: \"myoverdue\" });\r\n        this.FilterList.push({ Key: \"lblMyTicketsDueToday\", Value: \"myduetoday\" });\r\n        this.FilterList.push({ Key: \"lblMyUpdatedTickets\", Value: \"myupdated\" });\r\n\r\n        this.AgentList = await this.service.Data.ExecuteAPI_Post<Array<any>>(\"Admin/Get_UserSelection_List\", { Is_Agent: true });\r\n    }\r\n\r\n    bindToolTip() {\r\n        let service = this.service;\r\n        window.setTimeout(() => {\r\n            $(\".subtooltip\").each(function () {\r\n                var $this = $(this);\r\n                let obj: any = $this.find('#ID').val();\r\n                let strSplit = obj.split(\"|\"); //ID|Subject|Category|Status\r\n                let site_url = service.Settings.API_URL + \"/Home/Get_Tooltip?ModuleType=ticket&lang=\" + service.CL + \"&ID=\" + strSplit[0] + \"&Subject=\" + strSplit[1] + \"&Category=\" + strSplit[2] + \"&Status=\" + strSplit[3];\r\n                $(this)[\"webuiPopover\"]({\r\n                    container: $this,\r\n                    placement: service.Is_RTL() ? 'left' : 'right',\r\n                    animation: 'fade',\r\n                    type: 'async',\r\n                    url: site_url,\r\n                    async: { type: 'POST', before: function (that, xhr) { xhr.setRequestHeader(\"Authorization\", 'Bearer ' + service.Data.BearerToken); } },\r\n                    cache: true,\r\n                    width: 600,\r\n                    height: 'auto',\r\n                    trigger: 'hover',\r\n                    delay: {\r\n                        show: 400,\r\n                        hide: 100\r\n                    },\r\n                    closeable: false,\r\n                    offsetTop: 0,\r\n                });\r\n            });\r\n        }, 300);\r\n    }\r\n\r\n    refreshGrid(isRefresh) {\r\n        this.bindData(isRefresh);\r\n    }\r\n\r\n    change_columnchooser(filter: GridFilter, value, index) {\r\n        filter.Is_Visible != value;\r\n        let lst = this.gridFilter.map((d, index) => { return { col: d.ColumnName, show: d.Is_Visible, ind: index } });\r\n        this.service.App.set_localstorage('ticket_colums', lst);\r\n    }\r\n\r\n    AddRow() {\r\n        this.router.navigate(['/ticket/add']);\r\n    }\r\n    EditRow() {\r\n        let selectedRow = this.allItems.filter((x) => x.selectedRow);\r\n        if (selectedRow.length == 0) {\r\n            this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectRow\"));\r\n        }\r\n        else if (selectedRow.length > 1) {\r\n            this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectOnlyOneRow\"));\r\n        }\r\n        else {\r\n            let ID = selectedRow[0][\"DisplayTicketID\"];\r\n            this.EditTicket(ID);\r\n        }\r\n    }\r\n    EditRowDBClick(RowItem: any) {\r\n        if (!RowItem.isTrusted && RowItem) {\r\n            this.EditTicket(RowItem.DisplayTicketID);\r\n        }\r\n    }\r\n    EditTicket(DisplayTicketID) {\r\n        $(\".subtooltip\")[\"webuiPopover\"]('destroy');\r\n        this.router.navigate([\"/ticket/detail\", DisplayTicketID]);//redirect to ticket detail page\r\n    }\r\n    async DeleteRow() {\r\n        try {\r\n            let selectedRow = this.allItems.filter((x) => x.selectedRow).map(d => d.TicketID).join();\r\n            if (selectedRow.length == 0) {\r\n                this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectRow\"));\r\n            } else {\r\n                if (confirm(this.service.Translator.instant(\"msgDeleteSelectedItems\"))) {\r\n                    this.service.App.ShowLoader = true;\r\n                    let res = await this.service.Data.ExecuteAPI_Post<number>(\"Ticket/Ticket_Delete\", { TicketIDs: selectedRow });\r\n                    if (res > 0) {\r\n                        this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketDeleted\"));\r\n                        this.refreshGrid(true);\r\n                    }\r\n                    else {\r\n                        this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgErrorTicketsUsedInAnotherTable\"));\r\n                    }\r\n                    this.service.App.ShowLoader = false;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    ViewRow(RowItem: any) {\r\n        if (RowItem) {\r\n            this.Row_View.open(RowItem, \"ticket\");\r\n        }\r\n        else {\r\n            let selectedRow = this.allItems.filter((x) => x.selectedRow);\r\n            if (selectedRow.length == 0) {\r\n                this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectRow\"));\r\n            }\r\n            else if (selectedRow.length > 1) {\r\n                this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectOnlyOneRow\"));\r\n            }\r\n            else {\r\n                this.Row_View.open(selectedRow[0], \"ticket\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //CloneTicket\r\n    async CloneTicket() {\r\n        try {\r\n            let selectedRow = this.allItems.filter((x) => x.selectedRow);\r\n            if (selectedRow.length == 0) {\r\n                this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectRow\"));\r\n            }\r\n            else if (selectedRow.length > 1) {\r\n                this.service.showMessage(AlertType.Warning, this.service.Translator.instant(\"msgSelectOnlyOneRow\"));\r\n            }\r\n            else {\r\n                let ID = selectedRow[0][\"TicketID\"];\r\n                if (confirm(this.service.Translator.instant(\"msgCloneSelectedTicket\"))) {\r\n                    this.service.App.ShowLoader = true;\r\n                    let res = await this.service.Data.ExecuteAPI_Post<any>(\"Ticket/Ticket_Clone\", { TicketID: ID });\r\n                    if (res) {\r\n                        this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketCloned\"));\r\n                        this.refreshGrid(true);\r\n                        this.service.GoTo_ScrollTop(window);\r\n                    }\r\n                    this.service.App.ShowLoader = false;;\r\n                }\r\n            }\r\n            this.ClearCheckbox();//clear checkbox\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;;\r\n        }\r\n    }\r\n\r\n    //Filter \r\n    FilterChange(value: string) {\r\n        let filter_Items = []; let cDate = this.service.Date_Format(new Date(), 'yyyy-MM-dd');\r\n        if (value == \"\") {\r\n            filter_Items = this.allItems_main;\r\n        }\r\n        else if (value == \"open\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Open\" || d.StatusType == \"OnHold\"));\r\n        }\r\n        else if (value == \"closed\") {\r\n            filter_Items = this.allItems_main.filter(d => d.StatusType == \"Closed\");\r\n        }\r\n        else if (value == \"pending\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Open\" || d.StatusType == \"OnHold\") && d.AssignedUser);\r\n        }\r\n        else if (value == \"unassign\") {\r\n            filter_Items = this.allItems_main.filter(d => !d.AssignedUser);\r\n        }\r\n        else if (value == \"overdue\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Open\" || d.StatusType == \"OnHold\") && d.DueDate && this.service.Date_Format(d.DueDate, 'yyyy-MM-dd') < cDate);\r\n        }\r\n        else if (value == \"duetoday\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Open\" || d.StatusType == \"OnHold\") && d.DueDate && this.service.Date_Format(d.DueDate, 'yyyy-MM-dd') == cDate);\r\n        }\r\n        else if (value == \"assignme\") {\r\n            filter_Items = this.allItems_main.filter(d => d.AssignedUser == this.service.Account.UserID);\r\n        }\r\n\r\n        else if (value == \"myopen\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Open\" || d.StatusType == \"OnHold\") && d.AssignedUser == this.service.Account.UserID);\r\n        }\r\n        else if (value == \"myclosed\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Closed\") && d.AssignedUser == this.service.Account.UserID);\r\n        }\r\n        else if (value == \"myunassign\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Open\" || d.StatusType == \"OnHold\") && (d.AssignedUser == this.service.Account.UserID || !d.AssignedUser));\r\n        }\r\n\r\n        else if (value == \"myoverdue\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Open\" || d.StatusType == \"OnHold\") && d.AssignedUser == this.service.Account.UserID && d.DueDate && this.service.Date_Format(d.DueDate, 'yyyy-MM-dd') < cDate);\r\n        }\r\n        else if (value == \"myduetoday\") {\r\n            filter_Items = this.allItems_main.filter(d => (d.StatusType == \"Open\" || d.StatusType == \"OnHold\") && d.AssignedUser == this.service.Account.UserID && d.DueDate && this.service.Date_Format(d.DueDate, 'yyyy-MM-dd') == cDate);\r\n        }\r\n        else if (value == \"myupdated\") {\r\n            filter_Items = this.allItems_main.filter(d => d.UpdatedUser == this.service.Account.UserID);\r\n        }\r\n        this.allItems = filter_Items;\r\n        this.service.App.refreshGrid.emit();\r\n    }\r\n\r\n    //Assigned And Pickup Tickets        \r\n    AssignToUser(item) {\r\n        let objUser = { UserID: item.UserID, DisplayName: item.DisplayName, Email: item.Email };\r\n        if (item.UserID > 0) {\r\n            this.Ticket_AssignTo_Update(objUser, false);\r\n            this.selectedAgent = 0;\r\n        }\r\n    }\r\n    PickUp() {\r\n        let objUser = { UserID: this.service.Account.UserID, DisplayName: this.service.Account.DisplayName, Email: this.service.Account.Email };\r\n        this.Ticket_AssignTo_Update(objUser, true);\r\n    }\r\n    async Ticket_AssignTo_Update(objUser, Is_PickUp) {\r\n        try {\r\n            if (objUser.UserID > 0) {\r\n                let lstSelectedRow = this.allItems.filter((x) => x.selectedRow && x.AssignedUser != objUser.UserID);\r\n                if (lstSelectedRow.length == 0) {\r\n                    if (Is_PickUp) {\r\n                        this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgSelectTicketsToPickedUp\"));\r\n                    } else {\r\n                        this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgSelectTicketsToAssignAgent\"));\r\n                    }\r\n                } else {\r\n                    this.service.App.ShowLoader = true;\r\n                    let res = await this.service.Data.ExecuteAPI_Post<number>(\"Ticket/Ticket_AssignTo_Update\", { lstTicket: lstSelectedRow, objUser: objUser });\r\n                    if (res > 0) {\r\n                        if (Is_PickUp) {\r\n                            this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketPickedUp\"));\r\n                        } else {\r\n                            this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketAssignedToAgent\"));\r\n                        }\r\n                        this.refreshGrid(true);\r\n                    }\r\n                    else {\r\n                        this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n                    }\r\n                    this.service.App.ShowLoader = false;\r\n                }\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n            }\r\n            this.ClearCheckbox();//clear checkbox\r\n\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    //Close Tickets\r\n    CloseTicketForm: UntypedFormGroup;\r\n    @ViewChild(\"modalCloseTicket\") modalCloseTicket: ModalDialog;\r\n    StatusList: Array<any> = []; CLosedStatusList: Array<any> = []; TicketCloseModeList: Array<any> = [];\r\n    async InitCloseTicketForm() {\r\n        this.CloseTicketForm = this.fb.group({\r\n            StatusID: [0, Validators.compose([Validators.required, Validators.min(1)])],\r\n            TicketCloseModeID: [0, Validators.compose([Validators.required, Validators.min(1)])],\r\n            StatusCloseReason: [\"\"]\r\n        });\r\n        this.StatusList = await this.service.Data.ExecuteAPI_Post<Array<any>>(\"Admin/Get_Status_List\");\r\n        this.CLosedStatusList = this.StatusList.filter(d => d.Is_Closed == 1);\r\n\r\n        this.TicketCloseModeList = await this.service.Data.ExecuteAPI_Post<Array<any>>(\"Admin/Get_TicketCloseMode_List\");\r\n    }\r\n    OpenCloseTicket() {\r\n        let selectedRow = this.allItems.filter((x) => x.selectedRow).map(d => d.TicketID).join();\r\n        if (selectedRow.length == 0) {\r\n            this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgSelectTicketsToClose\"));\r\n        } else {\r\n            this.modalCloseTicket.open();\r\n        }\r\n    }\r\n    async CloseTicket() {\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n            let obj = this.CloseTicketForm.getRawValue();\r\n            let lstSelectedRow = this.allItems.filter((x) => x.selectedRow);\r\n            let res = await this.service.Data.ExecuteAPI_Post<number>(\"Ticket/Ticket_Status_Update\", { lstTicket: lstSelectedRow, StatusID: obj.StatusID, TicketCloseModeID: obj.TicketCloseModeID, StatusCloseReason: obj.StatusCloseReason });\r\n            if (res > 0) {\r\n                this.modalCloseTicket.close();\r\n                this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketClosed\"));\r\n                this.CloseTicketForm.reset();\r\n                this.clearCloseTicketForm();\r\n                this.refreshGrid(true);\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n            }\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n    clearCloseTicketForm() {\r\n        this.CloseTicketForm.controls[\"StatusID\"].setValue(0);\r\n        this.CloseTicketForm.controls[\"TicketCloseModeID\"].setValue(0);\r\n        this.CloseTicketForm.controls[\"StatusCloseReason\"].setValue(\"\");\r\n    }\r\n\r\n    //Print\r\n    Print() {\r\n        let selectedRow = this.allItems.filter((x) => x.selectedRow).map(d => d.TicketID).join();\r\n        if (selectedRow.length == 0) {\r\n            this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgSelectTicketsToPrint\"));\r\n        } else {\r\n            let url = this.service.Settings.API_URL + \"/Home/Print?ids=\" + selectedRow + \"&type=ticket&lang=\" + this.service.CL;\r\n            window.open(url, \"Print Preview\");\r\n        }\r\n\r\n        this.ClearCheckbox();//clear checkbox\r\n    }\r\n\r\n    //Export\r\n    async Export(ftype: string) {\r\n        try {\r\n            let items = this.commongrid.records;\r\n            if (items.length > 0) {\r\n                this.service.App.ShowLoader = true;\r\n                let columns = this.gridFilter.filter(d => d.Is_Visible && d.ColumnName != 'HasAttachment').map((val) => {\r\n                    val.DisplayText = this.service.Translator.instant(val.DisplayText);\r\n                    return val;\r\n                });\r\n                let obj = { model: items, Columns: columns, Type: ftype };\r\n\r\n                let res = await this.service.Data.ExecuteAPI_Post<any>(\"Admin/Export_Data\", obj);\r\n                if (res) {\r\n                    let filename = \"\"; let filetype = \"\";\r\n                    if (ftype == 'excel') { filename = \"Tickets.xlsx\"; filetype = \"application/octet-stream\"; }\r\n                    else if (ftype == 'pdf') { filename = \"Tickets.pdf\"; filetype = \"application/pdf\"; }\r\n                    else if (ftype == 'csv') { filename = \"Tickets.csv\"; filetype = \"application/octet-stream\"; }\r\n\r\n                    window[\"saveAs\"](new Blob([window[\"base64js\"].toByteArray(res.data)], { type: filetype }), filename);\r\n                }\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgNoRecordsToExport\"));\r\n            }\r\n\r\n            this.ClearCheckbox();//clear checkbox\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    //ShowHideColumnFilter\r\n    Is_ShowColumnFilter = true;\r\n    ShowHideColumnFilter() {\r\n        this.Is_ShowColumnFilter = !this.Is_ShowColumnFilter;\r\n        this.service.App.showhideColumnFilter.emit(this.Is_ShowColumnFilter);\r\n    }\r\n\r\n\r\n    //Clear Checkbox\r\n    ClearCheckbox() {\r\n        this.service.App.clearAllCheckbox.emit();\r\n    }\r\n\r\n}\r\n", "\uFEFF\r\n<div class=\"main-panel\" style=\"width:100%;\">\r\n    <div class=\"row breadcrumb\">\r\n        <div class=\"col-12 col-md-6 title\">\r\n            {{'lblNewTicket'| translate:service.CL}}\r\n        </div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <a class=\"link\" routerLink=\"/\">{{'lblHome'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <a class=\"link\" routerLink=\"/ticket\">{{'lblTicket'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <span>{{'lblNewTicket'| translate:service.CL}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 stretch-card\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form [formGroup]=\"TicketForm\" (ngSubmit)=\"TicketForm.valid && SaveTicket()\" #f=\"ngForm\" novalidate>\r\n                            <div class=\"card-title\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpSave'| translate:service.CL}}\"><i class=\"fa fa-save\"></i></button>\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" (click)=\"Is_SaveAndclose = true;\" tooltip=\"{{'tlpSaveAndClose'| translate:service.CL}}\">\r\n                                    <i class=\"fa fa-save\"></i>\r\n                                    <span class=\"save-close\"><i class=\"fa fa-times\"></i></span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"BackToList();\" tooltip=\"{{'tlpCancel'| translate:service.CL}}\"><i class=\"fa fa-times\"></i> {{'btnCancel'| translate:service.CL}}</button>\r\n                            </div>\r\n                            <div class=\"modal-body1\">\r\n                                <div class=\"form-box row\">\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\" [ngClass]=\"{'has-error': f.submitted && !TicketForm.controls.RequestedName.valid}\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblRequester'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"hidden\" class=\"form-control\" formControlName=\"RequestedUser\">\r\n                                                    <ng-template #reqTemplate let-model=\"item\">{{model?.DisplayName}} {{'('+ model?.Email +')'}}</ng-template>\r\n                                                    <input #focus formControlName=\"RequestedName\"\r\n                                                           [typeahead]=\"ClientList\"\r\n                                                           typeaheadOptionField=\"DisplayName\"\r\n                                                           (typeaheadNoResults)=\"NoRequesterFound($event)\"\r\n                                                           [typeaheadScrollable]=\"true\"\r\n                                                           [typeaheadOptionsInScrollableView]=\"8\"\r\n                                                           [typeaheadLatinize]=\"true\"\r\n                                                           (typeaheadOnSelect)=\"onSelectRequester($event)\"\r\n                                                           [typeaheadMinLength]=\"0\"\r\n                                                           [typeaheadItemTemplate]=\"reqTemplate\"\r\n                                                           class=\"form-control\">\r\n                                                    <div class=\"input-append ml-1\"><a class=\"btn btn-secondary btn-sm tlp\" (click)=\"OpenUserList('user')\" tooltip=\"{{'lblSelectUser'| translate:service.CL}}\"><i class=\"fa fa-user\"></i></a></div>\r\n                                                    <div [class.hide]=\"!selectedClient && TicketForm.controls.RequestedUser?.value <= 0\" class=\"input-append ml-1\"><a class=\"btn btn-secondary btn-sm tlp\" (click)=\"ViewUser()\" tooltip=\"{{'lblViewUserDetail'| translate:service.CL}}\"><i class=\"fa fa-id-card\"></i></a></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblTechnician'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <div class=\"input-group\">\r\n                                                    <input type=\"hidden\" class=\"form-control\" formControlName=\"AssignedUser\">\r\n                                                    <ng-template #assignTemplate let-model=\"item\">{{model?.DisplayName}} {{'('+ model?.Email +')'}}</ng-template>\r\n                                                    <input formControlName=\"AssignedName\"\r\n                                                           [typeahead]=\"AgentList\"\r\n                                                           typeaheadOptionField=\"DisplayName\"\r\n                                                           (typeaheadNoResults)=\"NoTechnicianFound($event)\"\r\n                                                           [typeaheadScrollable]=\"true\"\r\n                                                           [typeaheadOptionsInScrollableView]=\"8\"\r\n                                                           [typeaheadLatinize]=\"true\"\r\n                                                           (typeaheadOnSelect)=\"onSelectTechnician($event)\"\r\n                                                           [typeaheadMinLength]=\"0\"\r\n                                                           [typeaheadItemTemplate]=\"assignTemplate\"\r\n                                                           [typeaheadSelectFirstItem]=\"false\"\r\n                                                           class=\"form-control\">\r\n                                                    <div class=\"input-append ml-1\"><a class=\"btn btn-secondary btn-sm tlp\" (click)=\"OpenUserList('technician')\" tooltip=\"{{'lblSelectTechnician'| translate:service.CL}}\"><i class=\"fa fa-user\"></i></a></div>\r\n                                                    <div class=\"input-append ml-1\"><a class=\"btn btn-secondary btn-sm tlp\" (click)=\"AssignCurrentUser()\" tooltip=\"{{'lblAssignCurrentUser'| translate:service.CL}}\"><i class=\"fa fa-share\"></i></a></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblRequestType'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"RequestTypeID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.RequestTypeList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\" [ngClass]=\"{'has-error': f.submitted && !TicketForm.controls.StatusID.valid}\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblStatus'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"StatusID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.StatusList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblTicketMode'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"TicketModeID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.TicketModeList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblLevel'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"LevelID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.LevelList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblCategory'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"CategoryID\" (change)=\"Change_Category($event.target.value,0)\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.CategoryList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblSubCategory'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"SubCategoryID\" (change)=\"Change_SubCategory($event.target.value)\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of Filter_SubCategory_List\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblItem'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"ItemID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of Filter_ItemList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblImpact'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"ImpactID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.ImpactList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblPriority'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"PriorityID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.PriorityList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblUrgency'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"UrgencyID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.UrgencyList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblDepartment'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"DepartmentID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.DepartmentList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblLocation'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <select class=\"form-control custom-select\" formControlName=\"LocationID\">\r\n                                                    <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                    <option *ngFor=\"let item of model?.LocationList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 col-lg-6\">\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-12 col-lg-3 col-form-label\">{{'lblDueDate'| translate:service.CL}}</label>\r\n                                            <div class=\"col-12 col-lg-8\">\r\n                                                <div class=\"input-group datepicker\">\r\n                                                    <ng2-flatpickr #dueDate [config]=\"DueDate_Config\" formControlName=\"DueDate\" altInputClass=\"form-control\"></ng2-flatpickr>\r\n                                                    <div class=\"input-group-append\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"service?.OpenFlatpickr(dueDate)\"><i class=\"fa fa-calendar\"></i></button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"col-12 col-lg-6\"></div>\r\n                                    <div class=\"col-12 form-group\" [ngClass]=\"{'has-error': f.submitted && !TicketForm.controls.Subject.valid}\">\r\n                                        <label>{{'lblSubject'| translate:service.CL}}</label>\r\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"Subject\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblSubject'| translate:service.CL}}\" />\r\n                                    </div>\r\n                                    <div class=\"col-12 form-group editor-height\">\r\n                                        <label>{{'lblDescription'| translate:service.CL}}</label>\r\n                                        <textarea id=\"txtDesc\" class=\"form-control kendoEditor\" formControlName=\"Description\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblDescription'| translate:service.CL}}\"></textarea>\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"col-12 mt-5 mb-2 d-flex justify-content-between\">\r\n                                        <h5>{{'lblAttachments'| translate:service.CL}}</h5>\r\n                                        <button type=\"button\" class=\"btn btn-info btn-sm\" (click)=\"flAttachment.click();\">\r\n                                            <i *ngIf=\"isAttachLoading\" class=\"fa fa-circle-notch fa-spin mr-1\"></i>  {{'lblUploadFiles'| translate:service.CL}}\r\n                                        </button>\r\n                                        <input #flAttachment type=\"file\" multiple (change)=\"fileChange($event)\" class=\"hide\" />\r\n                                    </div>\r\n                                    <div class=\"col-12 form-group\">\r\n                                        <div class=\"table-responsive\">\r\n                                            <table class=\"table table-bordered table-striped small-btn table-attachment\">\r\n                                                <tr *ngFor=\"let file of lstAttachments;let i = index;\" class=\"bg-light-yellow \">\r\n                                                    <td>\r\n                                                        <i class=\"mr-2\" [ngClass]=\"file.extension | fileType\"></i>\r\n                                                        {{file.name}}\r\n                                                    </td>\r\n                                                    <td width=\"4%\">\r\n                                                        <button type=\"button\" class=\"btn btn-xs btn-danger\" (click)=\"RemoveAttachment(file,'new')\">{{'lblRemove'| translate:service.CL}}</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 form-group mt-5\">\r\n                                        <h5>{{'lblResolution'| translate:service.CL}}</h5>\r\n                                    </div>\r\n                                    <div class=\"col-12 form-group editor-height\">\r\n                                        <textarea id=\"txtSolDesc\" class=\"form-control kendoEditor\" formControlName=\"SolutionDescription\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblResolution'| translate:service.CL}}\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer form-btn mt-4 pb-0 prl-0\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpSave'| translate:service.CL}}\"><i class=\"fa fa-save\"></i></button>\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" (click)=\"Is_SaveAndclose = true;\" tooltip=\"{{'tlpSaveAndClose'| translate:service.CL}}\">\r\n                                    <i class=\"fa fa-save\"></i>\r\n                                    <span class=\"save-close\"><i class=\"fa fa-times\"></i></span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"BackToList();\" tooltip=\"{{'tlpCancel'| translate:service.CL}}\"><i class=\"fa fa-times\"></i> {{'btnCancel'| translate:service.CL}}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<user-technician (onSave)=\"UserSelectDone($event)\" #UserSelect></user-technician>\r\n", "import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { SystemService } from '../shared/SystemService';\r\nimport { KeyValueDefault, UserManagement_Model } from '../shared/common_model';\r\n\r\nimport { User_Technician_ListComponent } from '../admin_setting/user/user_technician_list';\r\nimport { AlertType } from '../shared/common_model';\r\nimport { FlatpickrOptions } from 'ng2-flatpickr';\r\nimport { FocusInvalidDirective } from '../shared/app.directive';\r\ndeclare var $: JQueryStatic;\r\n\r\n@Component({\r\n    templateUrl: './ticket_new.html',\r\n    providers: [FocusInvalidDirective]\r\n})\r\n\r\nexport class Ticket_NewComponent {\r\n    isLoading = false; Is_SaveAndclose: boolean = false;\r\n    model: Common_Ticket_Detail_Model;\r\n    AgentList: Array<UserManagement_Model> = []; selectedAgent: UserManagement_Model;\r\n    ClientList: Array<UserManagement_Model> = []; selectedClient: UserManagement_Model;\r\n    Filter_SubCategory_List: Array<KeyValueDefault> = []; Filter_ItemList: Array<KeyValueDefault> = [];\r\n    minStDate: Date = new Date();\r\n    TicketForm: UntypedFormGroup;\r\n    @ViewChild(User_Technician_ListComponent) public UserSelect: User_Technician_ListComponent;\r\n    DueDate_Config: FlatpickrOptions = this.service.CommonDateConfig(); @ViewChild('dueDate') dueDate;\r\n    @ViewChild('focus') inpfocus: ElementRef;\r\n    constructor(public fb: UntypedFormBuilder, public service: SystemService, public route: ActivatedRoute, public router: Router, public location: Location) {\r\n        this.service.GoTo_ScrollTop(window);\r\n        this.InitTicketForm();\r\n        this.Not_AllowedExtensions = this.service.Get_NotAllowedExtensions();\r\n    }\r\n    ngOnInit() {\r\n        setTimeout(() => { this.bindData(); });\r\n    }\r\n    ngAfterViewInit() {\r\n        this.service.setKendoEditor(\".kendoEditor\");//initialize kendo editor\r\n        this.SetDateOptions();\r\n        setTimeout(() => { this.inpfocus.nativeElement.focus(); }, 100);\r\n    }\r\n    InitTicketForm() {\r\n        this.TicketForm = this.fb.group({\r\n            TicketID: [0],\r\n            RequestedName: [\"\", Validators.required],\r\n            RequestedUser: [null, Validators.compose([Validators.required, Validators.min(1)])],\r\n            RequestedUserEmail: [\"\"],//Only for send mail\r\n            AssignedName: [\"\"],\r\n            AssignedUser: [null],\r\n            AssignedUserEmail: [\"\"],//Only for send mail\r\n            StatusID: [null, Validators.compose([Validators.required, Validators.min(1)])],\r\n            TicketModeID: [1],\r\n            LevelID: [null],\r\n            RequestTypeID: [null],\r\n            CategoryID: [null],\r\n            SubCategoryID: [null],\r\n            ItemID: [null],\r\n            ImpactID: [null],\r\n            PriorityID: [null],\r\n            DepartmentID: [null],\r\n            UrgencyID: [null],\r\n            LocationID: [null],\r\n            DueDate: [\"\"],\r\n            Subject: [\"\", Validators.required],\r\n            Description: [\"\"],\r\n            SolutionDescription: [\"\"]\r\n        });\r\n    }\r\n\r\n    SetDateOptions() {\r\n        this.dueDate.flatpickr.set(\"onChange\", (dtarr, dt, instance) => {\r\n            this.TicketForm.controls['DueDate'].setValue(dt);\r\n        });\r\n    }\r\n    async bindData() {\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n\r\n            this.model = await this.service.Data.ExecuteAPI_Post<Common_Ticket_Detail_Model>(\"Ticket/Get_Ticket_Detail_Data\", { Is_Agent: true });\r\n            this.SetDefaultValue();\r\n\r\n            let res1 = await this.service.Data.ExecuteAPI_Post<Array<UserManagement_Model>>(\"Admin/Get_UserSelection_List\", { Is_Agent: false });\r\n            this.ClientList = res1;\r\n            this.AgentList = res1.filter(d => d.Is_Agent);\r\n\r\n            this.service.App.ShowLoader = false;\r\n\r\n        } catch (e) { this.service.App.ShowLoader = false; }\r\n    }\r\n    async SaveTicket() {\r\n        let obj = this.TicketForm.getRawValue();\r\n        obj.Description = $(\"#txtDesc\").data(\"kendoEditor\").value();\r\n        obj.SolutionDescription = $(\"#txtSolDesc\").data(\"kendoEditor\").value();\r\n        if (obj.DueDate) { obj.DueDate = obj.DueDate + ' ' + this.service.Date_Format(new Date(), 'HH:mm:ss') }\r\n\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n            let res = await this.service.Data.ExecuteAPI_Post<any>(\"Ticket/Ticket_Create\", { model: obj, attachment: this.lstAttachments ? this.lstAttachments : [] });\r\n            if (res) {//tuple<long,string>\r\n                this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketCreated\"));\r\n                window.setTimeout(() => {\r\n                    if (this.Is_SaveAndclose) {\r\n                        this.router.navigate([\"/ticket\"]);\r\n                    }\r\n                    else {\r\n                        this.router.navigate([\"/ticket/detail\", res.Item2]);\r\n                    }\r\n                }, 500);\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n            }\r\n\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) { this.service.App.ShowLoader = false; }\r\n    }\r\n    SetDefaultValue() {\r\n        let Status = this.model.StatusList.find(d => d.Is_Default);\r\n        if (Status) { this.TicketForm.controls[\"StatusID\"].setValue(Status.Value); }\r\n\r\n        let Level = this.model.LevelList.find(d => d.Is_Default);\r\n        if (Level) { this.TicketForm.controls[\"LevelID\"].setValue(Level.Value); }\r\n\r\n        let RequestType = this.model.RequestTypeList.find(d => d.Is_Default);\r\n        if (RequestType) { this.TicketForm.controls[\"RequestTypeID\"].setValue(RequestType.Value); }\r\n\r\n        let Category = this.model.CategoryList.find(d => d.Is_Default);\r\n        if (Category) { this.TicketForm.controls[\"CategoryID\"].setValue(Category.Value); }\r\n\r\n        let Impact = this.model.ImpactList.find(d => d.Is_Default);\r\n        if (Impact) { this.TicketForm.controls[\"ImpactID\"].setValue(Impact.Value); }\r\n\r\n        let Priority = this.model.PriorityList.find(d => d.Is_Default);\r\n        if (Priority) { this.TicketForm.controls[\"PriorityID\"].setValue(Priority.Value); }\r\n\r\n        let Department = this.model.DepartmentList.find(d => d.Is_Default);\r\n        if (Department) { this.TicketForm.controls[\"DepartmentID\"].setValue(Department.Value); }\r\n\r\n        let Urgency = this.model.UrgencyList.find(d => d.Is_Default);\r\n        if (Urgency) { this.TicketForm.controls[\"UrgencyID\"].setValue(Urgency.Value); }\r\n\r\n        let Location = this.model.LocationList.find(d => d.Is_Default);\r\n        if (Location) { this.TicketForm.controls[\"LocationID\"].setValue(Location.Value); }\r\n\r\n        if (Category) { this.Change_Category(Category.Value); }\r\n    }\r\n\r\n    Change_Category(CategoryID: number, SubCategoryID: number = 0) {\r\n        this.Filter_SubCategory_List = this.model.SubCategoryList.filter(d => d.MainID == CategoryID);\r\n        this.Change_SubCategory(SubCategoryID > 0 ? SubCategoryID : null);\r\n    }\r\n    Change_SubCategory(SubCategoryID: number) {\r\n        this.Filter_ItemList = this.model.ItemList.filter(d => d.MainID == SubCategoryID);\r\n        if (this.Filter_ItemList.length == 0) { this.TicketForm.controls[\"ItemID\"].setValue(null); }\r\n    }\r\n\r\n    BackToList() {\r\n        this.router.navigate(['/ticket']);\r\n    }\r\n\r\n    //AutoComplete Requester & Technician\r\n    NoRequesterFound(item: any) {\r\n        //this.TicketForm.controls[\"RequestedUser\"].setValue(0); this.TicketForm.controls[\"RequestedName\"].setValue(\"\");\r\n    }\r\n    //onSelectRequester($event: TypeaheadMatch) {\r\n    onSelectRequester($event: any) {\r\n        let obj: any = {};\r\n        obj.user = $event.item; obj.isTechnician = false;\r\n        this.UserSelectDone(obj);\r\n    }\r\n    NoTechnicianFound(event: any) {\r\n        //this.TicketForm.controls[\"AssignedUser\"].setValue(0); this.TicketForm.controls[\"AssignedName\"].setValue(\"\");\r\n    }\r\n    //onSelectTechnician($event: TypeaheadMatch) {\r\n    onSelectTechnician($event: any) {\r\n        let obj: any = {};\r\n        obj.user = $event.item; obj.isTechnician = true;\r\n        this.UserSelectDone(obj);\r\n    }\r\n\r\n\r\n    //Bind User & Technician Grid   \r\n    OpenUserList(type: string) {\r\n        if (type == 'user') {\r\n            this.UserSelect.open(false, this.ClientList);\r\n        }\r\n        else if (type == 'technician') {\r\n            this.UserSelect.open(true, this.AgentList);\r\n        }\r\n    }\r\n    ViewUser() {\r\n        if (this.selectedClient) {\r\n            this.UserSelect.ViewRow(this.selectedClient);\r\n        }\r\n    }\r\n    UserSelectDone(item: any) {\r\n        if (item.isTechnician) {\r\n            this.selectedAgent = item.user;\r\n            this.TicketForm.controls[\"AssignedName\"].setValue(this.selectedAgent.DisplayName);\r\n            this.TicketForm.controls[\"AssignedUser\"].setValue(this.selectedAgent.UserID);\r\n            this.TicketForm.controls[\"AssignedUserEmail\"].setValue(this.selectedAgent.Email);\r\n        }\r\n        else {\r\n            this.selectedClient = item.user;\r\n            this.TicketForm.controls[\"RequestedName\"].setValue(this.selectedClient.DisplayName);\r\n            this.TicketForm.controls[\"RequestedUser\"].setValue(this.selectedClient.UserID);\r\n            this.TicketForm.controls[\"RequestedUserEmail\"].setValue(this.selectedClient.Email);\r\n        }\r\n    }\r\n    AssignCurrentUser() {\r\n        this.selectedAgent = <UserManagement_Model>{\r\n            UserID: this.service.Account.UserID, DisplayName: this.service.Account.DisplayName,\r\n            UserName: this.service.Account.UserName, Email: this.service.Account.Email\r\n        };\r\n\r\n        this.TicketForm.controls[\"AssignedName\"].setValue(this.selectedAgent.DisplayName);\r\n        this.TicketForm.controls[\"AssignedUser\"].setValue(this.selectedAgent.UserID);\r\n        this.TicketForm.controls[\"AssignedUserEmail\"].setValue(this.selectedAgent.Email);\r\n    }\r\n\r\n    //Attachments\r\n    @ViewChild('flAttachment') flAttachment: ElementRef;\r\n    isAttachLoading: boolean = false; lstAttachments: Array<any> = [];\r\n    Not_AllowedExtensions: Array<string> = [];\r\n    fileChange(event: any) {\r\n        let files = event.target.files;// [].slice.call(event.target.files);\r\n        for (var i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n            this.ReadFiles(file); //read files                       \r\n        }\r\n    }\r\n    ReadFiles(file) {\r\n        this.isAttachLoading = true;\r\n        var myReader: FileReader = new FileReader();\r\n        let extension = file.name.replace(/^.*\\./, '');\r\n        if (this.Not_AllowedExtensions.indexOf(extension.toLowerCase()) < 0) {\r\n            myReader.readAsDataURL(file);\r\n            myReader.onloadend = (e) => {\r\n                this.lstAttachments.push({ name: file.name, type: file.type, extension: extension, size: file.size, value: <string>myReader.result });\r\n                this.isAttachLoading = false;\r\n            }\r\n        }\r\n        else {\r\n            this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgFileExtensionNotSupport\"));\r\n            this.isAttachLoading = false;\r\n        }\r\n    }\r\n\r\n    RemoveAttachment(item: any, type: string) {\r\n        this.lstAttachments = this.lstAttachments.filter(d => d != item);\r\n    }\r\n\r\n}\r\n\r\ninterface Common_Ticket_Detail_Model {\r\n    RequestTypeList: Array<KeyValueDefault>;\r\n    StatusList: Array<KeyValueDefault>;\r\n    PriorityList: Array<KeyValueDefault>;\r\n    CategoryList: Array<KeyValueDefault>;\r\n    SubCategoryList: Array<KeyValueDefault>;\r\n    ItemList: Array<KeyValueDefault>;\r\n    UrgencyList: Array<KeyValueDefault>;\r\n    ImpactList: Array<KeyValueDefault>;\r\n    DepartmentList: Array<KeyValueDefault>;\r\n    LevelList: Array<KeyValueDefault>;\r\n    LocationList: Array<KeyValueDefault>;\r\n    TicketModeList: Array<KeyValueDefault>;\r\n}\r\n", "\uFEFF\r\n<div class=\"main-panel\" style=\"width:100%;\">\r\n    <div class=\"row breadcrumb\">\r\n        <div class=\"col-12 col-md-6 title\">\r\n            {{'lblEditTicket'| translate:service.CL}}\r\n        </div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <a class=\"link\" routerLink=\"/\">{{'lblHome'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <a class=\"link\" routerLink=\"/ticket\">{{'lblTicket'| translate:service.CL}}</a> <i class=\"fa fa-angle-double-right\"></i>\r\n            <span>{{'lblEditTicket'| translate:service.CL}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"content-wrapper\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 stretch-card\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <form [formGroup]=\"TicketForm\" (ngSubmit)=\"TicketForm.valid && SaveTicket()\" #f=\"ngForm\" novalidate>\r\n                            <div class=\"card-title\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpSave'| translate:service.CL}}\"><i class=\"fa fa-save\"></i></button>\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" (click)=\"Is_SaveAndclose = true;\" tooltip=\"{{'tlpSaveAndClose'| translate:service.CL}}\">\r\n                                    <i class=\"fa fa-save\"></i>\r\n                                    <span class=\"save-close\"><i class=\"fa fa-times\"></i></span>\r\n                                </button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Delete_Ticket\" (click)=\"DeleteRow()\" class=\"btn btn-sm btn-danger tlp\" tooltip=\"{{'tlpDelete'| translate:service.CL}}\"><i class=\"fa fa-trash\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Clone_Ticket\" (click)=\"CloneTicket()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpCloneTicket'| translate:service.CL}}\"><i class=\"fa fa-clone\"></i></button>\r\n                                <a target=\"_blank\" *ngIf=\"service?.Account?.Is_Print\" (click)=\"Print()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpPrint'| translate:service.CL}}\"><i class=\"fa fa-print\"></i></a>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Close_Ticket\" (click)=\"OpenCloseTicket()\" class=\"btn btn-sm btn-danger tlp\" tooltip=\"{{'tlpCloseTickets'| translate:service.CL}}\"><i class=\"fa fa-times\"></i></button>\r\n                                <button type=\"button\" *ngIf=\"service?.Account?.Is_Pickup\" (click)=\"PickUp()\" class=\"btn btn-sm btn-info tlp\" tooltip=\"{{'tlpPickUp'| translate:service.CL}}\"><i class=\"fa fa-shipping-fast\"></i> {{'btnPickUp'| translate:service.CL}}</button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"BackToList();\" tooltip=\"{{'tlpCancel'| translate:service.CL}}\"><i class=\"fa fa-times\"></i> {{'btnCancel'| translate:service.CL}}</button>\r\n                                <button [class.hide]=\"!Is_Show_FCR\" type=\"button\" (click)=\"Set_FCR(true)\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpMarkFCR'| translate:service.CL}}\"><i class=\"fa fa-bookmark\"></i></button>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 col-xl-8\">\r\n                                    <div class=\"form-box row\">\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-5 col-md-3 col-form-label\">{{'lblTicketID'| translate:service.CL}} </label>\r\n                                                <div class=\"col-7 col-md-8 col-form-label\">\r\n                                                    <b>{{TicketForm.controls.DisplayTicketID.value}}</b>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6 text-right\">\r\n                                            <button [class.hide]=\"!Is_FCR\" type=\"button\" (click)=\"Set_FCR(false)\" class=\"badge badge-primary tlp cursor\" tooltip=\"{{'lblUnMarkFCR'| translate:service.CL}}\">\r\n                                                <i class=\"fa fa-bookmark mr-1\"></i> {{'lblFCRMarked'| translate:service.CL}}\r\n                                            </button>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\" [ngClass]=\"{'has-error': f.submitted && !TicketForm.controls.RequestedName.valid}\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblRequester'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <div class=\"input-group\">\r\n                                                        <input type=\"hidden\" class=\"form-control\" formControlName=\"RequestedUser\">\r\n                                                        <ng-template #reqTemplate let-model=\"item\">{{model.DisplayName}} {{'('+ model.Email +')'}}</ng-template>\r\n                                                        <input #focus formControlName=\"RequestedName\"\r\n                                                               [typeahead]=\"ClientList\"\r\n                                                               typeaheadOptionField=\"DisplayName\"\r\n                                                               (typeaheadNoResults)=\"NoRequesterFound($event)\"\r\n                                                               [typeaheadScrollable]=\"true\"\r\n                                                               [typeaheadOptionsInScrollableView]=\"8\"\r\n                                                               [typeaheadLatinize]=\"true\"\r\n                                                               (typeaheadOnSelect)=\"onSelectRequester($event)\"\r\n                                                               [typeaheadMinLength]=\"0\"\r\n                                                               [typeaheadItemTemplate]=\"reqTemplate\"\r\n                                                               class=\"form-control\">\r\n                                                        <div class=\"input-append ml-1\"><a class=\"btn btn-secondary btn-sm tlp\" (click)=\"OpenUserList('user')\" tooltip=\"{{'lblSelectUser'| translate:service.CL}}\"><i class=\"fa fa-user\"></i></a></div>\r\n                                                        <div [class.hide]=\"!selectedClient && TicketForm.controls.RequestedUser?.value <= 0\" class=\"input-append ml-1\"><a class=\"btn btn-secondary btn-sm tlp\" (click)=\"ViewUser()\" tooltip=\"{{'lblViewUserDetail'| translate:service.CL}}\"><i class=\"fa fa-id-card\"></i></a></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblTechnician'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <div class=\"input-group\">\r\n                                                        <input type=\"hidden\" class=\"form-control\" formControlName=\"AssignedUser\">\r\n                                                        <ng-template #assignTemplate let-model=\"item\">{{model.DisplayName}} {{'('+ model.Email +')'}}</ng-template>\r\n                                                        <input formControlName=\"AssignedName\"\r\n                                                               [typeahead]=\"AgentList\"\r\n                                                               typeaheadOptionField=\"DisplayName\"\r\n                                                               (typeaheadNoResults)=\"NoTechnicianFound($event)\"\r\n                                                               [typeaheadScrollable]=\"true\"\r\n                                                               [typeaheadOptionsInScrollableView]=\"8\"\r\n                                                               [typeaheadLatinize]=\"true\"\r\n                                                               (typeaheadOnSelect)=\"onSelectTechnician($event)\"\r\n                                                               [typeaheadMinLength]=\"0\"\r\n                                                               [typeaheadItemTemplate]=\"assignTemplate\"\r\n                                                               [typeaheadSelectFirstItem]=\"false\"\r\n                                                               class=\"form-control\">\r\n                                                        <div class=\"input-append ml-1\"><a class=\"btn btn-secondary btn-sm tlp\" (click)=\"OpenUserList('technician')\" tooltip=\"{{'lblSelectTechnician'| translate:service.CL}}\"><i class=\"fa fa-user\"></i></a></div>\r\n                                                        <div class=\"input-append ml-1\"><a class=\"btn btn-secondary btn-sm tlp\" (click)=\"AssignCurrentUser()\" tooltip=\"{{'lblAssignCurrentUser'| translate:service.CL}}\"><i class=\"fa fa-share\"></i></a></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblRequestType'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"RequestTypeID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.RequestTypeList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\" [ngClass]=\"{'has-error': f.submitted && !TicketForm.controls.StatusID.valid}\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblStatus'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"StatusID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.StatusList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblTicketMode'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"TicketModeID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.TicketModeList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblLevel'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"LevelID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.LevelList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblCategory'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"CategoryID\" (change)=\"Change_Category($event.target.value,0)\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.CategoryList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblSubCategory'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"SubCategoryID\" (change)=\"Change_SubCategory($event.target.value)\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of Filter_SubCategory_List\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblItem'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"ItemID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of Filter_ItemList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblImpact'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"ImpactID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.ImpactList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblPriority'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"PriorityID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.PriorityList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblUrgency'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"UrgencyID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.UrgencyList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblDepartment'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"DepartmentID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.DepartmentList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblLocation'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <select class=\"form-control custom-select\" formControlName=\"LocationID\">\r\n                                                        <option [ngValue]=\"null\">{{'lblSelect'| translate:service.CL}}</option>\r\n                                                        <option *ngFor=\"let item of model?.LocationList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-12 col-lg-6\">\r\n                                            <div class=\"form-group row\">\r\n                                                <label class=\"col-12 col-lg-3 col-form-label\">{{'lblDueDate'| translate:service.CL}}</label>\r\n                                                <div class=\"col-12 col-lg-8\">\r\n                                                    <div class=\"input-group datepicker\">\r\n                                                        <ng2-flatpickr #dueDate [config]=\"DueDate_Config\" formControlName=\"DueDate\" altInputClass=\"form-control\"></ng2-flatpickr>\r\n                                                        <div class=\"input-group-append\">\r\n                                                            <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"service?.OpenFlatpickr(dueDate)\"><i class=\"fa fa-calendar\"></i></button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-12 col-lg-6\"></div>\r\n                                        <div class=\"col-12 form-group\" [ngClass]=\"{'has-error': f.submitted && !TicketForm.controls.Subject.valid}\">\r\n                                            <label>{{'lblSubject'| translate:service.CL}}</label>\r\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"Subject\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblSubject'| translate:service.CL}}\" />\r\n                                        </div>\r\n                                        <div class=\"col-12 form-group editor-height\">\r\n                                            <label>{{'lblDescription'| translate:service.CL}}</label>\r\n                                            <textarea id=\"txtDesc\" class=\"form-control kendoEditor\" formControlName=\"Description\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblDescription'| translate:service.CL}}\"></textarea>\r\n                                        </div>\r\n\r\n\r\n                                        <div class=\"col-12 mt-5 mb-2 d-flex justify-content-between\">\r\n                                            <h5>{{'lblAttachments'| translate:service.CL}}</h5>\r\n                                            <button type=\"button\" class=\"btn btn-info btn-sm\" (click)=\"flAttachment.click();\">\r\n                                                <i *ngIf=\"isAttachLoading\" class=\"fa fa-circle-notch fa-spin mr-1\"></i>  {{'lblUploadFiles'| translate:service.CL}}\r\n                                            </button>\r\n                                            <input #flAttachment type=\"file\" multiple (change)=\"fileChange($event)\" class=\"hide\" />\r\n                                        </div>\r\n                                        <div class=\"col-12 form-group\">\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-bordered table-striped small-btn table-attachment\">\r\n                                                    <tr *ngFor=\"let item of AttachmentList\">\r\n                                                        <td>\r\n                                                            <i class=\"mr-2\" [ngClass]=\"item.Extension | fileType\"></i>\r\n                                                            <a target=\"_blank\" href=\"{{service?.Settings?.Base_API_URL + '/Documents/Attachments/Ticket/' + item.FileName}}\"> {{item.DisplayName}}</a>\r\n                                                        </td>\r\n                                                        <td width=\"4%\">\r\n                                                            <button type=\"button\" class=\"btn btn-xs btn-danger\" (click)=\"RemoveAttachment(item,'old')\">{{'lblRemove'| translate:service.CL}}</button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr *ngFor=\"let file of lstAttachments;let i = index;\" class=\"bg-light-yellow \">\r\n                                                        <td>\r\n                                                            <i class=\"mr-2\" [ngClass]=\"file.extension | fileType\"></i>\r\n                                                            {{file.name}}\r\n                                                        </td>\r\n                                                        <td width=\"4%\">\r\n                                                            <button type=\"button\" class=\"btn btn-xs btn-danger\" (click)=\"RemoveAttachment(file,'new')\">{{'lblRemove'| translate:service.CL}}</button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-12 mt-5 mb-2 d-flex justify-content-between\">\r\n                                            <h5>{{'lblResolution'| translate:service.CL}}</h5>\r\n                                            <button type=\"button\" class=\"btn btn-info btn-sm\" (click)=\"FindSolution();\">\r\n                                                <i *ngIf=\"isLoadingFindSolution\" class=\"fa fa-circle-notch fa-spin mr-1\"></i>    {{'lblFindSolution'| translate:service.CL}}\r\n                                            </button>\r\n                                        </div>\r\n                                        <div class=\"col-12 form-group editor-height\">\r\n                                            <textarea id=\"txtSolDesc\" class=\"form-control kendoEditor\" formControlName=\"SolutionDescription\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblResolution'| translate:service.CL}}\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-12 col-xl-4 border-left ticket-chat\">\r\n                                    <h5 class=\"d-flex justify-content-between align-content-center\">\r\n                                        {{'lblTicketChat'| translate:service.CL}}\r\n                                        <!--<button type=\"button\" class=\"btn btn-sm btn-outline-dark\" (click)=\"show_chat();\">\r\n                                            <i class=\"fa fa-reply mr-1\"></i>{{'btnReply'| translate:service.CL}}\r\n                                        </button>-->\r\n                                    </h5>\r\n                                    <div>\r\n                                        <textarea class=\"form-control\" [(ngModel)]=\"txt_chat\" [ngModelOptions]=\"{standalone: true}\" rows=\"4\" style=\"resize:vertical;min-height:82px;\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblDescription'| translate:service.CL}}\"></textarea>\r\n                                        <div class=\"d-flex justify-content-between align-content-center mt-2\">\r\n                                            <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" (click)=\"save_chat();\" [disabled]=\"is_loading_chat\">{{'btnSendReply'| translate:service.CL}}</button>\r\n                                            <!--<button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" (click)=\"show_chat(false);\">{{'btnCancel'| translate:service.CL}}</button>-->\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"table-responsive mt-3\">\r\n                                        <table class=\"table table-borderless\">\r\n                                            <tr *ngFor=\"let item of chat_list\">\r\n                                                <td style=\"width:1%;vertical-align:top;\">\r\n                                                    <img alt=\"\" class=\"img-xs rounded-circle profile-list-pic\"\r\n                                                         [src]=\"item.ProfilePicture ? (service?.Settings?.Base_API_URL + '/Documents/Profile/' + item.ProfilePicture) : '/assets/images/profile.png'\" />\r\n                                                </td>\r\n                                                <td>\r\n                                                    <h5>{{item.DisplayName}}</h5>\r\n                                                    <div style=\"white-space:pre-wrap\" [innerHTML]=\"item.Description\"></div>\r\n                                                </td>\r\n                                                <td style=\"width:22%;vertical-align:top;\">\r\n                                                    {{item.CreatedDate | date:'dd MMM yyyy hh:mm a'}}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </table>\r\n                                        <div *ngIf=\"!chat_list.length\" class=\"mt-3 font-15\">\r\n                                            No chats available.\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"modal-footer form-btn mt-4 pb-0 prl-0\">\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" tooltip=\"{{'tlpSave'| translate:service.CL}}\"><i class=\"fa fa-save\"></i></button>\r\n                                <button type=\"submit\" class=\"btn btn-sm btn-primary tlp\" (click)=\"Is_SaveAndclose = true;\" tooltip=\"{{'tlpSaveAndClose'| translate:service.CL}}\">\r\n                                    <i class=\"fa fa-save\"></i>\r\n                                    <span class=\"save-close\"><i class=\"fa fa-times\"></i></span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-secondary tlp\" (click)=\"BackToList();\" tooltip=\"{{'tlpCancel'| translate:service.CL}}\"><i class=\"fa fa-times\"></i> {{'btnCancel'| translate:service.CL}}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<user-technician (onSave)=\"UserSelectDone($event)\" #UserSelect></user-technician>\r\n<solution_find-list (onSelectSolution)=\"FindSolutionDone($event)\" #modalFindSolution></solution_find-list>\r\n\r\n<modal-dialog #modalCloseTicket [backDrop]=\"false\" modalClass=\"modal-md\" modalHeader=\"Close Ticket\">\r\n    <form [formGroup]=\"CloseTicketForm\" (ngSubmit)=\"CloseTicketForm.valid && CloseTicket()\" #f1=\"ngForm\" novalidate>\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-box row\">\r\n                <div class=\"col-12 col-md-6 form-group\" [ngClass]=\"{'has-error': f1.submitted && !CloseTicketForm.controls.StatusID.valid}\">\r\n                    <label>{{'lblStatus'| translate:service.CL}}</label>\r\n                    <select class=\"form-control custom-select\" formControlName=\"StatusID\" autofocus>\r\n                        <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                        <option *ngFor=\"let item of CLosedStatusList\" [value]=\"item.StatusID\">{{item.Name}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-12 col-md-6 form-group\" [ngClass]=\"{'has-error': f1.submitted && !CloseTicketForm.controls.TicketCloseModeID.valid}\">\r\n                    <label>{{'lblTicketCloseMode'| translate:service.CL}}</label>\r\n                    <select class=\"form-control custom-select\" formControlName=\"TicketCloseModeID\">\r\n                        <option value=\"0\">{{'lblSelect'| translate:service.CL}}</option>\r\n                        <option *ngFor=\"let item of TicketCloseModeList\" [value]=\"item.Value\">{{item.Key}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-12 form-group\">\r\n                    <label>{{'lblReason'| translate:service.CL}}</label>\r\n                    <textarea class=\"form-control\" formControlName=\"StatusCloseReason\" placeholder=\"{{'lblEnter'| translate:service.CL}} {{'lblReasonForClosedTicket'| translate:service.CL}}\"></textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer form-btn\">\r\n            <button type=\"submit\" class=\"btn btn-teal\">{{'btnCloseTicket'| translate:service.CL}}</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modalCloseTicket.close()\">{{'btnCancel'| translate:service.CL}}</button>\r\n        </div>\r\n    </form>\r\n</modal-dialog>", "import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { SystemService } from '../shared/SystemService';\r\nimport { KeyValue, KeyValueDefault, UserManagement_Model, Ticket_Model, Description_Model } from '../shared/common_model';\r\nimport { ModalDialog } from '../shared/modal.dialog';\r\n\r\nimport { User_Technician_ListComponent } from '../admin_setting/user/user_technician_list';\r\nimport { Solution_Find_ListComponent } from '../solution/solution_find_list';\r\nimport { AlertType } from '../shared/common_model';\r\nimport { FlatpickrOptions } from 'ng2-flatpickr';\r\nimport { FocusInvalidDirective } from '../shared/app.directive';\r\ndeclare var $: JQueryStatic;\r\n\r\n@Component({\r\n    templateUrl: './ticket_detail.html',\r\n    providers: [FocusInvalidDirective]\r\n})\r\n\r\nexport class Ticket_DetailComponent {\r\n    isLoading = false; Is_SaveAndclose: boolean = false; sub: any;\r\n    model: Common_Ticket_Detail_Model;\r\n    AgentList: Array<UserManagement_Model> = []; selectedAgent: UserManagement_Model;\r\n    ClientList: Array<UserManagement_Model> = []; selectedClient: UserManagement_Model;\r\n    Filter_SubCategory_List: Array<KeyValueDefault> = []; Filter_ItemList: Array<KeyValueDefault> = [];\r\n    minStDate: Date = new Date(); AttachmentList: Array<any> = [];\r\n    TicketForm: UntypedFormGroup;\r\n    DisplayTicketID: string; TicketID: number;\r\n    selectedTicket: Ticket_Model;\r\n    @ViewChild(User_Technician_ListComponent) public UserSelect: User_Technician_ListComponent;\r\n    @ViewChild(Solution_Find_ListComponent) public modalFindSolution: Solution_Find_ListComponent;\r\n    DueDate_Config: FlatpickrOptions = this.service.CommonDateConfig(); @ViewChild('dueDate') dueDate;\r\n    @ViewChild('focus') inpfocus: ElementRef;\r\n    constructor(public fb: UntypedFormBuilder, public service: SystemService, public route: ActivatedRoute, public router: Router, public location: Location) {\r\n        this.service.GoTo_ScrollTop(window);\r\n        this.DisplayTicketID = this.route.snapshot.paramMap.get(\"id\");\r\n        this.InitTicketForm();\r\n        this.InitCloseTicketForm();\r\n    }\r\n    ngOnInit() {\r\n        setTimeout(() => { this.bindData(); });\r\n        this.sub = this.service.Data.registerReceiver<any>('Get_TicketChat_Refresh').subscribe((res) => {\r\n            if (res && res.TicketID == this.TicketID) {\r\n                this.bind_chats(res);\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.sub) { this.sub.unsubscribe(); }\r\n    }\r\n    InitTicketForm() {\r\n        this.service.App.ShowLoader = true;\r\n        this.TicketForm = this.fb.group({\r\n            TicketID: [0],\r\n            DisplayTicketID: [\"\"],\r\n            RequestedName: [\"\", Validators.required],\r\n            RequestedUser: [null, Validators.compose([Validators.required, Validators.min(1)])],\r\n            RequestedUserEmail: [\"\"],//Only for send mail\r\n            AssignedName: [\"\"],\r\n            AssignedUser: [null],\r\n            AssignedUserEmail: [\"\"],//Only for send mail\r\n            OldAssignedUser: [null],\r\n            StatusID: [null, Validators.compose([Validators.required, Validators.min(1)])],\r\n            OldStatusID: [null],\r\n            TicketModeID: [null],\r\n            LevelID: [null],\r\n            RequestTypeID: [null],\r\n            CategoryID: [null],\r\n            SubCategoryID: [null],\r\n            ItemID: [null],\r\n            ImpactID: [null],\r\n            PriorityID: [null],\r\n            DepartmentID: [null],\r\n            UrgencyID: [null],\r\n            LocationID: [null],\r\n            DueDate: [\"\"],\r\n            Subject: [\"\", Validators.required],\r\n            Description: [\"\"],\r\n            SolutionDescription: [\"\"],\r\n\r\n            AssignedDate: [],\r\n            UpdatedUser: [],\r\n            UpdatedDate: []\r\n        });\r\n    }\r\n    SetDateOptions(dt = \"\") {\r\n        this.dueDate.flatpickr.setDate(dt);\r\n        this.dueDate.flatpickr.set(\"onChange\", (dtarr, dt, instance) => {\r\n            if (dt) { dt = this.service.Date_Format(dt, 'YYYY-MM-dd') + ' ' + this.service.Date_Format(new Date(), 'HH:mm:ss') }\r\n            this.TicketForm.controls['DueDate'].setValue(dt);\r\n        });\r\n    }\r\n    async bindData() {\r\n        try {\r\n            this.model = await this.service.Data.ExecuteAPI_Post<Common_Ticket_Detail_Model>(\"Ticket/Get_Ticket_Detail_Data\", { Is_Agent: true });\r\n            this.getTicketDetails();\r\n\r\n            this.ClientList = await this.service.Data.ExecuteAPI_Post<Array<UserManagement_Model>>(\"Admin/Get_UserSelection_List\", { Is_Agent: false });\r\n            this.AgentList = this.ClientList.filter(d => d.Is_Agent);\r\n\r\n        } catch (e) { }\r\n    }\r\n\r\n    async getTicketDetails() {\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n            this.selectedTicket = await this.service.Data.ExecuteAPI_Post<Ticket_Model>(\"Ticket/Get_Ticket_ByID\", { TicketID: 0, DisplayTicketID: this.DisplayTicketID });\r\n            if (this.selectedTicket) {\r\n                this.TicketForm.patchValue(this.selectedTicket);\r\n                this.bindDescription();//set description and solution value\r\n                this.TicketID = this.selectedTicket.TicketID;\r\n                this.Is_FCR = this.selectedTicket.Is_FCR;\r\n                this.Is_Show_FCR = (!this.selectedTicket.Is_FCR && this.selectedTicket.StatusType == this.service.StatusType.Closed ? true : false);\r\n\r\n                if (this.selectedTicket.CategoryID) { this.Change_Category(this.selectedTicket.CategoryID, this.selectedTicket.SubCategoryID); }\r\n                this.SetDateOptions(<any>this.selectedTicket.DueDate);//bind date      \r\n            }\r\n            this.bindTicketAttachment();\r\n            this.bind_chats();\r\n        } catch (e) { this.service.App.ShowLoader = false; }\r\n    }\r\n\r\n    objDescription: any;\r\n    async bindDescription() {\r\n        try {\r\n            let res = await this.service.Data.ExecuteAPI_Post<Description_Model>(\"Dashboard/Get_DescriptionByID\", { ModuleType: \"ticket\", ID: this.DisplayTicketID });\r\n            if (res) {\r\n                this.TicketForm.controls[\"Description\"].setValue(res.Description);\r\n                this.TicketForm.controls[\"SolutionDescription\"].setValue(res.SolutionDescription);\r\n                this.service.setKendoEditor(\".kendoEditor\");//initialize kendo editor      \r\n            }\r\n            window.setTimeout(() => { this.service.App.ShowLoader = false }, 200);\r\n        } catch (e) { this.service.App.ShowLoader = false; }\r\n    }\r\n    setDescription() {\r\n        this.TicketForm.controls[\"Description\"].setValue(this.objDescription.Description);\r\n        this.TicketForm.controls[\"SolutionDescription\"].setValue(this.objDescription.SolutionDescription);\r\n        this.service.setKendoEditor(\".kendoEditor\");//initialize kendo editor\r\n        window.setTimeout(() => { this.service.App.ShowLoader = false }, 100);\r\n    }\r\n\r\n    // type = clone etc\r\n    async SaveTicket(type = \"\") {\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n\r\n            let obj = this.TicketForm.getRawValue();\r\n            obj.Description = $(\"#txtDesc\").data(\"kendoEditor\").value();\r\n            obj.SolutionDescription = $(\"#txtSolDesc\").data(\"kendoEditor\").value();\r\n\r\n            let res = await this.service.Data.ExecuteAPI_Post<any>(\"Ticket/Ticket_Update\", { model: obj, attachment: this.lstAttachments ? this.lstAttachments : [] });\r\n            if (res) {//tuple<long,string>\r\n                this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketUpdated\"));\r\n                if (this.Is_SaveAndclose) {\r\n                    window.setTimeout(() => { this.router.navigate([\"/ticket\"]); }, 300);\r\n                }\r\n                else {\r\n                    if (this.lstAttachments.length > 0) { this.lstAttachments = []; this.bindTicketAttachment(); }\r\n                    this.service.GoTo_ScrollTop(window);\r\n                }\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n            }\r\n\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    Change_Category(CategoryID: number, SubCategoryID: number = 0) {\r\n        this.Filter_SubCategory_List = this.model.SubCategoryList.filter(d => d.MainID == CategoryID);\r\n        this.Change_SubCategory(SubCategoryID > 0 ? SubCategoryID : null);\r\n    }\r\n    Change_SubCategory(SubCategoryID: number) {\r\n        this.Filter_ItemList = this.model.ItemList.filter(d => d.MainID == SubCategoryID);\r\n        if (this.Filter_ItemList.length == 0) { this.TicketForm.controls[\"ItemID\"].setValue(null); }\r\n    }\r\n\r\n    BackToList() {\r\n        this.router.navigate(['/ticket']);\r\n    }\r\n\r\n    //AutoComplete Requester & Technician\r\n    NoRequesterFound(item: any) {\r\n        //this.TicketForm.controls[\"RequestedUser\"].setValue(0); this.TicketForm.controls[\"RequestedName\"].setValue(\"\");\r\n    }\r\n    //onSelectRequester($event: TypeaheadMatch) {\r\n    onSelectRequester($event: any) {\r\n        let obj: any = {};\r\n        obj.user = $event.item; obj.isTechnician = false;\r\n        this.UserSelectDone(obj);\r\n    }\r\n    NoTechnicianFound(item: any) {\r\n        //this.TicketForm.controls[\"AssignedUser\"].setValue(0); this.TicketForm.controls[\"AssignedName\"].setValue(\"\");\r\n    }\r\n    //onSelectTechnician($event: TypeaheadMatch) {\r\n    onSelectTechnician($event: any) {\r\n        let obj: any = {};\r\n        obj.user = $event.item; obj.isTechnician = true;\r\n        this.UserSelectDone(obj);\r\n    }\r\n\r\n    //Bind User & Technician Grid   \r\n    OpenUserList(type: string) {\r\n        if (type == 'user') {\r\n            this.UserSelect.open(false, this.ClientList);\r\n        }\r\n        else if (type == 'technician') {\r\n            this.UserSelect.open(true, this.AgentList);\r\n        }\r\n    }\r\n    ViewUser() {\r\n        if (this.selectedClient) {\r\n            this.UserSelect.ViewRow(this.selectedClient);\r\n        }\r\n        else { this.UserSelect.ViewRow(null, this.TicketForm.get(\"RequestedUser\").value); }\r\n    }\r\n    UserSelectDone(item: any) {\r\n        if (item.isTechnician) {\r\n            this.selectedAgent = item.user;\r\n            this.TicketForm.controls[\"AssignedName\"].setValue(this.selectedAgent.DisplayName);\r\n            this.TicketForm.controls[\"AssignedUser\"].setValue(this.selectedAgent.UserID);\r\n            this.TicketForm.controls[\"AssignedUserEmail\"].setValue(this.selectedAgent.Email);\r\n        }\r\n        else {\r\n            this.selectedClient = item.user;\r\n            this.TicketForm.controls[\"RequestedName\"].setValue(this.selectedClient.DisplayName);\r\n            this.TicketForm.controls[\"RequestedUser\"].setValue(this.selectedClient.UserID);\r\n            this.TicketForm.controls[\"RequestedUserEmail\"].setValue(this.selectedClient.Email);\r\n        }\r\n    }\r\n    AssignCurrentUser() {\r\n        this.selectedAgent = <UserManagement_Model>{\r\n            UserID: this.service.Account.UserID, DisplayName: this.service.Account.DisplayName,\r\n            UserName: this.service.Account.UserName, Email: this.service.Account.Email\r\n        };\r\n        this.TicketForm.controls[\"AssignedName\"].setValue(this.selectedAgent.DisplayName);\r\n        this.TicketForm.controls[\"AssignedUser\"].setValue(this.selectedAgent.UserID);\r\n        this.TicketForm.controls[\"AssignedUserEmail\"].setValue(this.selectedAgent.Email);\r\n    }\r\n\r\n    async DeleteRow() {\r\n        try {\r\n            if (confirm(this.service.Translator.instant(\"msgDeleteSelectedItems\"))) {\r\n                this.service.App.ShowLoader = true;\r\n                let res = await this.service.Data.ExecuteAPI_Post<number>(\"Ticket/Ticket_Delete\", { TicketIDs: this.TicketID });\r\n                if (res > 0) {\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketDeleted\"));\r\n                    window.setTimeout(() => { this.BackToList(); }, 1000);\r\n                }\r\n                else {\r\n                    this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgErrorTicketsUsedInAnotherTable\"));\r\n                }\r\n\r\n                this.service.App.ShowLoader = false;\r\n            }\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n\r\n    //CloneTicket\r\n    async CloneTicket() {\r\n        try {\r\n            if (confirm(this.service.Translator.instant(\"msgClonethisTicket\"))) {\r\n                let res = await this.service.Data.ExecuteAPI_Post<any>(\"Ticket/Ticket_Clone\", { TicketID: this.TicketID });\r\n                if (res) {//tuple<long,string>\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketCloned\"));\r\n\r\n                    this.TicketForm.controls[\"TicketID\"].setValue(res.Item1);\r\n                    this.TicketForm.controls[\"DisplayTicketID\"].setValue(res.Item2);\r\n\r\n                    this.service.GoTo_ScrollTop(window);\r\n                    this.router.navigate([\"/ticket\"]);\r\n                    window.setTimeout(() => { this.router.navigate([\"/ticket/detail\", res.Item2]); }, 20);\r\n                }\r\n            }\r\n        } catch (e) { }\r\n    }\r\n    //Print\r\n    Print() {\r\n        let url = this.service.Settings.API_URL + \"/Home/Print?ids=\" + this.TicketID + \"&type=ticket&lang=\" + this.service.CL;\r\n        window.open(url, \"Print Preview\");\r\n    }\r\n\r\n    //Set First Call Resolution(FCR)\r\n    Is_FCR: boolean = false; Is_Show_FCR: boolean = false;\r\n    async Set_FCR(Is_FCR) {\r\n        try {\r\n            let res = await this.service.Data.ExecuteAPI_Post<number>(\"Ticket/Set_Ticket_FCR\", { TicketID: this.TicketID, Is_FCR: Is_FCR });\r\n            if (res) {\r\n                this.Is_FCR = Is_FCR;\r\n                this.Is_Show_FCR = !Is_FCR;\r\n                if (Is_FCR) {\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgFCRMarked\"));\r\n                }\r\n                else {\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgFCRUnMarked\"));\r\n                }\r\n            }\r\n\r\n        } catch (e) { }\r\n    }\r\n\r\n    //Close Tickets\r\n    CloseTicketForm: UntypedFormGroup;\r\n    @ViewChild(\"modalCloseTicket\") modalCloseTicket: ModalDialog;\r\n    CLosedStatusList: Array<any> = []; TicketCloseModeList: Array<any> = [];\r\n    async InitCloseTicketForm() {\r\n        this.CloseTicketForm = this.fb.group({\r\n            StatusID: [0, Validators.compose([Validators.required, Validators.min(1)])],\r\n            TicketCloseModeID: [0, Validators.compose([Validators.required, Validators.min(1)])],\r\n            StatusCloseReason: [\"\"]\r\n        });\r\n        let res = await this.service.Data.ExecuteAPI_Post<Array<any>>(\"Admin/Get_Status_List\");\r\n        if (res) {\r\n            this.CLosedStatusList = res.filter(d => d.Is_Closed == 1);\r\n        }\r\n\r\n        let res1 = await this.service.Data.ExecuteAPI_Post<Array<KeyValue>>(\"Admin/Get_TicketCloseMode_List\");\r\n        if (res1) {\r\n            this.TicketCloseModeList = res1;\r\n        }\r\n    }\r\n    OpenCloseTicket() {\r\n        this.modalCloseTicket.open();\r\n    }\r\n    async CloseTicket() {\r\n        try {\r\n            this.service.App.ShowLoader = true;\r\n            let obj = this.CloseTicketForm.getRawValue();\r\n\r\n            let lstSelectedRow = [];\r\n            lstSelectedRow.push(this.selectedTicket);\r\n\r\n            let res = await this.service.Data.ExecuteAPI_Post<number>(\"Ticket/Ticket_Status_Update\", { lstTicket: lstSelectedRow, StatusID: obj.StatusID, TicketCloseModeID: obj.TicketCloseModeID, StatusCloseReason: obj.StatusCloseReason });\r\n            if (res > 0) {\r\n                this.TicketForm.controls[\"StatusID\"].setValue(obj.StatusID);\r\n                this.modalCloseTicket.close();\r\n                this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketClosed\"));\r\n                this.clearCloseTicketForm();\r\n            }\r\n            else {\r\n                this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n            }\r\n            this.service.App.ShowLoader = false;\r\n        } catch (e) {\r\n            this.service.App.ShowLoader = false;\r\n        }\r\n    }\r\n    clearCloseTicketForm() {\r\n        this.CloseTicketForm.controls[\"StatusID\"].setValue(null);\r\n        this.CloseTicketForm.controls[\"TicketCloseModeID\"].setValue(null);\r\n        this.CloseTicketForm.controls[\"StatusCloseReason\"].setValue(\"\");\r\n    }\r\n\r\n    //Assigned And Pickup Tickets\r\n    PickUp() {\r\n        let objUser = { UserID: this.service.Account.UserID, DisplayName: this.service.Account.DisplayName, Email: this.service.Account.Email };\r\n        this.Ticket_AssignTo_Update(objUser, true);\r\n    }\r\n    async Ticket_AssignTo_Update(objUser, Is_PickUp) {\r\n        if (objUser.UserID > 0) {\r\n            try {\r\n\r\n                let lstSelectedRow = [];\r\n                lstSelectedRow.push(this.selectedTicket);\r\n\r\n                this.service.App.ShowLoader = true;\r\n                let res = await this.service.Data.ExecuteAPI_Post<number>(\"Ticket/Ticket_AssignTo_Update\", { lstTicket: lstSelectedRow, objUser: objUser });\r\n                if (res > 0) {\r\n                    this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgTicketPickedUp\"));\r\n                    this.AssignCurrentUser();\r\n                }\r\n                else {\r\n                    this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n                }\r\n                this.service.App.ShowLoader = false;\r\n            } catch (e) {\r\n                this.service.App.ShowLoader = false;\r\n            }\r\n        }\r\n        else {\r\n            this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n        }\r\n    }\r\n\r\n\r\n    //Attachments\r\n    @ViewChild('flAttachment') flAttachment: ElementRef;\r\n    isAttachLoading: boolean = false; lstAttachments: Array<any> = [];\r\n    Not_AllowedExtensions: Array<string> = [];\r\n    async bindTicketAttachment() {\r\n        this.Not_AllowedExtensions = this.service.Get_NotAllowedExtensions();\r\n        this.AttachmentList = await this.service.Data.ExecuteAPI_Post<Array<any>>(\"Ticket/Get_TicketAttachment_ByID\", { TicketID: this.TicketID });\r\n    }\r\n    fileChange(event: any) {\r\n        let files = event.target.files;\r\n        for (var i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n            this.ReadFiles(file); //read files                       \r\n        }\r\n    }\r\n    ReadFiles(file) {\r\n        this.isAttachLoading = true;\r\n        var myReader: FileReader = new FileReader();\r\n        let extension = file.name.replace(/^.*\\./, '');\r\n        if (this.Not_AllowedExtensions.indexOf(extension.toLowerCase()) < 0) {\r\n            myReader.readAsDataURL(file);\r\n            myReader.onloadend = (e) => {\r\n                this.lstAttachments.push({ name: file.name, type: file.type, extension: extension, size: file.size, value: <string>myReader.result });\r\n                this.isAttachLoading = false;\r\n            }\r\n        }\r\n        else {\r\n            this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgFileExtensionNotSupport\"));\r\n            this.isAttachLoading = false;\r\n        }\r\n    }\r\n\r\n    async RemoveAttachment(item: any, type: string) {\r\n        if (type == 'new') {\r\n            this.lstAttachments = this.lstAttachments.filter(d => d != item);\r\n        }\r\n        else if (type == 'old') {\r\n            try {\r\n                if (confirm(this.service.Translator.instant(\"msgDeleteSelectedAttachments\"))) {\r\n                    this.isAttachLoading = true;\r\n                    let res = await this.service.Data.ExecuteAPI_Post<number>(\"Ticket/TicketAttachment_Delete\", { TicketAttachmentID: item.TicketAttachmentID, FileName: item.FileName });\r\n                    if (res > 0) {\r\n                        this.service.showMessage(AlertType.Success, this.service.Translator.instant(\"msgAttachmentDeleted\"));\r\n                        this.AttachmentList = this.AttachmentList.filter(d => d != item);\r\n                    }\r\n                    else {\r\n                        this.service.showMessage(AlertType.Error, this.service.Translator.instant(\"msgError\"));\r\n                    }\r\n                    this.isAttachLoading = false;\r\n                }\r\n            } catch (e) {\r\n                this.isAttachLoading = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //Search Solition\r\n    isLoadingFindSolution = false;\r\n    FindSolution() {\r\n        this.modalFindSolution.open();\r\n    }\r\n    async FindSolutionDone(DisplaySolutionID: any) {\r\n        try {\r\n            this.isLoadingFindSolution = true;\r\n            let res = await this.service.Data.ExecuteAPI_Post<Description_Model>(\"Dashboard/Get_DescriptionByID\", { ModuleType: \"solution\", ID: DisplaySolutionID });\r\n            if (res) {\r\n                this.TicketForm.controls[\"SolutionDescription\"].setValue(res.Description);\r\n                $(\"#txtSolDesc\").data(\"kendoEditor\").refresh();\r\n                $(\"#txtSolDesc\").data(\"kendoEditor\").value(res.Description);\r\n            }\r\n            this.isLoadingFindSolution = false;\r\n        } catch (e) {\r\n            this.isLoadingFindSolution = false;\r\n        }\r\n    }\r\n\r\n    //Ticket Chat\r\n    is_show_chat = false; chat_list = []; txt_chat = ''; is_loading_chat = false;\r\n    show_chat(is_show = true) { this.is_show_chat = is_show; }\r\n    async bind_chats(item = null) {\r\n        try {\r\n            if (item) {\r\n                this.chat_list.splice(0, 0, item);\r\n                let elem = document.querySelector('.ticket-chat .table-responsive');\r\n                if (elem) { this.service.GoTo_ScrollTop(elem); }\r\n            }\r\n            else {\r\n                this.chat_list = await this.service.Data.ExecuteAPI_Post<any>(\"Ticket/Get_TicketChat\", { TicketID: this.TicketID });\r\n            }\r\n\r\n        } catch (e) { }\r\n    }\r\n    async save_chat() {\r\n        try {\r\n            if (this.txt_chat) {\r\n                this.is_loading_chat = true;\r\n                let obj = { TicketID: this.TicketID, Description: this.txt_chat };\r\n                let res = await this.service.Data.ExecuteAPI_Post<any>(\"Ticket/TicketChat_Update\", { model: obj });\r\n                this.txt_chat = '';\r\n                //this.is_show_chat = false;\r\n                this.is_loading_chat = false;\r\n            }\r\n        } catch (e) {\r\n            this.is_loading_chat = false;\r\n        }\r\n    }\r\n}\r\n\r\ninterface Common_Ticket_Detail_Model {\r\n    RequestTypeList: Array<KeyValueDefault>;\r\n    StatusList: Array<KeyValueDefault>;\r\n    PriorityList: Array<KeyValueDefault>;\r\n    CategoryList: Array<KeyValueDefault>;\r\n    SubCategoryList: Array<KeyValueDefault>;\r\n    ItemList: Array<KeyValueDefault>;\r\n    UrgencyList: Array<KeyValueDefault>;\r\n    ImpactList: Array<KeyValueDefault>;\r\n    DepartmentList: Array<KeyValueDefault>;\r\n    LevelList: Array<KeyValueDefault>;\r\n    LocationList: Array<KeyValueDefault>;\r\n    TicketModeList: Array<KeyValueDefault>;\r\n}\r\n", "\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule, UpperCasePipe } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { Ticket_ListComponent } from './ticket_list';\r\nimport { Ticket_NewComponent } from './ticket_new';\r\nimport { Ticket_DetailComponent } from './ticket_detail';\r\nimport { AuthGuard } from '../auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: Ticket_ListComponent, data: { pageProp: 'Show_Ticket_Menu' }, canActivate: [AuthGuard] },\r\n    { path: 'add', component: Ticket_NewComponent, data: { pageProp: 'Is_Add_Ticket' }, canActivate: [AuthGuard] },\r\n    { path: 'detail/:id', component: Ticket_DetailComponent, data: { pageProp: 'Is_Edit_Ticket' }, canActivate: [AuthGuard] },\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes), CommonModule, SharedModule],\r\n    declarations: [Ticket_ListComponent, Ticket_NewComponent, Ticket_DetailComponent],\r\n\r\n})\r\n\r\nexport class TicketModule {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
  "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",
  "names": ["Ticket_ListComponent", "index", "Ticket_NewComponent", "Location", "Ticket_DetailComponent", "dt", "TicketModule"]
}
